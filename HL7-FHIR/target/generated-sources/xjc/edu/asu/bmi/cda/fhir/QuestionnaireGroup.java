//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.03 at 01:43:53 PM MST 
//


package edu.asu.bmi.cda.fhir;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * A structured set of questions and their answers. The Questionnaire may contain questions, answers or both. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the underlying questions.
 * 
 * <p>Java class for Questionnaire.Group complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Questionnaire.Group"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="name" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/&gt;
 *         &lt;element name="header" type="{http://hl7.org/fhir}string" minOccurs="0"/&gt;
 *         &lt;element name="text" type="{http://hl7.org/fhir}string" minOccurs="0"/&gt;
 *         &lt;element name="subject" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/&gt;
 *         &lt;element name="group" type="{http://hl7.org/fhir}Questionnaire.Group" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="question" type="{http://hl7.org/fhir}Questionnaire.Question" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Questionnaire.Group", propOrder = {
    "name",
    "header",
    "text",
    "subject",
    "groups",
    "questions"
})
public class QuestionnaireGroup
    extends BackboneElement
    implements Serializable
{

    protected CodeableConcept name;
    protected edu.asu.bmi.cda.fhir.String header;
    protected edu.asu.bmi.cda.fhir.String text;
    protected ResourceReference subject;
    @XmlElement(name = "group")
    protected List<QuestionnaireGroup> groups;
    @XmlElement(name = "question")
    protected List<QuestionnaireQuestion> questions;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    public CodeableConcept getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setName(CodeableConcept value) {
        this.name = value;
    }

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link edu.asu.bmi.cda.fhir.String }
     *     
     */
    public edu.asu.bmi.cda.fhir.String getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link edu.asu.bmi.cda.fhir.String }
     *     
     */
    public void setHeader(edu.asu.bmi.cda.fhir.String value) {
        this.header = value;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link edu.asu.bmi.cda.fhir.String }
     *     
     */
    public edu.asu.bmi.cda.fhir.String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link edu.asu.bmi.cda.fhir.String }
     *     
     */
    public void setText(edu.asu.bmi.cda.fhir.String value) {
        this.text = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    public ResourceReference getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setSubject(ResourceReference value) {
        this.subject = value;
    }

    /**
     * Gets the value of the groups property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the groups property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGroups().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionnaireGroup }
     * 
     * 
     */
    public List<QuestionnaireGroup> getGroups() {
        if (groups == null) {
            groups = new ArrayList<QuestionnaireGroup>();
        }
        return this.groups;
    }

    /**
     * Gets the value of the questions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionnaireQuestion }
     * 
     * 
     */
    public List<QuestionnaireQuestion> getQuestions() {
        if (questions == null) {
            questions = new ArrayList<QuestionnaireQuestion>();
        }
        return this.questions;
    }

    public QuestionnaireGroup withName(CodeableConcept value) {
        setName(value);
        return this;
    }

    public QuestionnaireGroup withHeader(edu.asu.bmi.cda.fhir.String value) {
        setHeader(value);
        return this;
    }

    public QuestionnaireGroup withText(edu.asu.bmi.cda.fhir.String value) {
        setText(value);
        return this;
    }

    public QuestionnaireGroup withSubject(ResourceReference value) {
        setSubject(value);
        return this;
    }

    public QuestionnaireGroup withGroups(QuestionnaireGroup... values) {
        if (values!= null) {
            for (QuestionnaireGroup value: values) {
                getGroups().add(value);
            }
        }
        return this;
    }

    public QuestionnaireGroup withGroups(Collection<QuestionnaireGroup> values) {
        if (values!= null) {
            getGroups().addAll(values);
        }
        return this;
    }

    public QuestionnaireGroup withQuestions(QuestionnaireQuestion... values) {
        if (values!= null) {
            for (QuestionnaireQuestion value: values) {
                getQuestions().add(value);
            }
        }
        return this;
    }

    public QuestionnaireGroup withQuestions(Collection<QuestionnaireQuestion> values) {
        if (values!= null) {
            getQuestions().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withId(java.lang.String value) {
        setId(value);
        return this;
    }

}
