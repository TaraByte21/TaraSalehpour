//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.01 at 11:08:02 PM MST 
//


package edu.asu.bmi.cda.fhir;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * A Resource Profile - a statement of use of one or more FHIR Resources.  It may include constraints on Resources and Data Types, Terminology Binding Statements and Extension Definitions.
 * 
 * <p>Java class for Profile.ExtensionDefn complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Profile.ExtensionDefn"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="code" type="{http://hl7.org/fhir}code"/&gt;
 *         &lt;element name="display" type="{http://hl7.org/fhir}string" minOccurs="0"/&gt;
 *         &lt;element name="contextType" type="{http://hl7.org/fhir}ExtensionContext"/&gt;
 *         &lt;element name="context" type="{http://hl7.org/fhir}string" maxOccurs="unbounded"/&gt;
 *         &lt;element name="definition" type="{http://hl7.org/fhir}Profile.Definition"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.ExtensionDefn", propOrder = {
    "code",
    "display",
    "contextType",
    "contexts",
    "definition"
})
public class ProfileExtensionDefn
    extends BackboneElement
    implements Serializable
{

    @XmlElement(required = true)
    protected Code code;
    protected edu.asu.bmi.cda.fhir.String display;
    @XmlElement(required = true)
    protected ExtensionContext contextType;
    @XmlElement(name = "context", required = true)
    protected List<edu.asu.bmi.cda.fhir.String> contexts;
    @XmlElement(required = true)
    protected ProfileDefinition definition;

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link Code }
     *     
     */
    public Code getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link Code }
     *     
     */
    public void setCode(Code value) {
        this.code = value;
    }

    /**
     * Gets the value of the display property.
     * 
     * @return
     *     possible object is
     *     {@link edu.asu.bmi.cda.fhir.String }
     *     
     */
    public edu.asu.bmi.cda.fhir.String getDisplay() {
        return display;
    }

    /**
     * Sets the value of the display property.
     * 
     * @param value
     *     allowed object is
     *     {@link edu.asu.bmi.cda.fhir.String }
     *     
     */
    public void setDisplay(edu.asu.bmi.cda.fhir.String value) {
        this.display = value;
    }

    /**
     * Gets the value of the contextType property.
     * 
     * @return
     *     possible object is
     *     {@link ExtensionContext }
     *     
     */
    public ExtensionContext getContextType() {
        return contextType;
    }

    /**
     * Sets the value of the contextType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExtensionContext }
     *     
     */
    public void setContextType(ExtensionContext value) {
        this.contextType = value;
    }

    /**
     * Gets the value of the contexts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contexts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContexts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link edu.asu.bmi.cda.fhir.String }
     * 
     * 
     */
    public List<edu.asu.bmi.cda.fhir.String> getContexts() {
        if (contexts == null) {
            contexts = new ArrayList<edu.asu.bmi.cda.fhir.String>();
        }
        return this.contexts;
    }

    /**
     * Gets the value of the definition property.
     * 
     * @return
     *     possible object is
     *     {@link ProfileDefinition }
     *     
     */
    public ProfileDefinition getDefinition() {
        return definition;
    }

    /**
     * Sets the value of the definition property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProfileDefinition }
     *     
     */
    public void setDefinition(ProfileDefinition value) {
        this.definition = value;
    }

    public ProfileExtensionDefn withCode(Code value) {
        setCode(value);
        return this;
    }

    public ProfileExtensionDefn withDisplay(edu.asu.bmi.cda.fhir.String value) {
        setDisplay(value);
        return this;
    }

    public ProfileExtensionDefn withContextType(ExtensionContext value) {
        setContextType(value);
        return this;
    }

    public ProfileExtensionDefn withContexts(edu.asu.bmi.cda.fhir.String... values) {
        if (values!= null) {
            for (edu.asu.bmi.cda.fhir.String value: values) {
                getContexts().add(value);
            }
        }
        return this;
    }

    public ProfileExtensionDefn withContexts(Collection<edu.asu.bmi.cda.fhir.String> values) {
        if (values!= null) {
            getContexts().addAll(values);
        }
        return this;
    }

    public ProfileExtensionDefn withDefinition(ProfileDefinition value) {
        setDefinition(value);
        return this;
    }

    @Override
    public ProfileExtensionDefn withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withId(java.lang.String value) {
        setId(value);
        return this;
    }

}
