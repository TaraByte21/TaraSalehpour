//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have either a @value, an @id, or extensions
 * 
 * <p>Java class for Supply complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Supply">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Resource">
 *       &lt;sequence>
 *         &lt;element name="kind" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="identifier" type="{http://hl7.org/fhir}Identifier" minOccurs="0"/>
 *         &lt;element name="status" type="{http://hl7.org/fhir}SupplyStatus" minOccurs="0"/>
 *         &lt;element name="orderedItem" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="patient" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="dispense" type="{http://hl7.org/fhir}Supply.Dispense" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Supply", propOrder = {
    "kind",
    "identifier",
    "status",
    "orderedItem",
    "patient",
    "dispense"
})
@Entity(name = "Supply")
@Table(name = "SUPPLY")
public class Supply
    extends Resource
    implements Equals, HashCode
{

    protected CodeableConcept kind;
    protected Identifier identifier;
    protected SupplyStatus status;
    protected ResourceReference orderedItem;
    protected ResourceReference patient;
    protected List<SupplyDispense> dispense;

    /**
     * Gets the value of the kind property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "KIND_SUPPLY_HJID")
    public CodeableConcept getKind() {
        return kind;
    }

    /**
     * Sets the value of the kind property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setKind(CodeableConcept value) {
        this.kind = value;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    @ManyToOne(targetEntity = Identifier.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IDENTIFIER_SUPPLY_HJID")
    public Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setIdentifier(Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link SupplyStatus }
     *     
     */
    @ManyToOne(targetEntity = SupplyStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_SUPPLY_HJID")
    public SupplyStatus getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link SupplyStatus }
     *     
     */
    public void setStatus(SupplyStatus value) {
        this.status = value;
    }

    /**
     * Gets the value of the orderedItem property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORDEREDITEM_SUPPLY_HJID")
    public ResourceReference getOrderedItem() {
        return orderedItem;
    }

    /**
     * Sets the value of the orderedItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setOrderedItem(ResourceReference value) {
        this.orderedItem = value;
    }

    /**
     * Gets the value of the patient property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PATIENT_SUPPLY_HJID")
    public ResourceReference getPatient() {
        return patient;
    }

    /**
     * Sets the value of the patient property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setPatient(ResourceReference value) {
        this.patient = value;
    }

    /**
     * Gets the value of the dispense property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dispense property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDispense().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SupplyDispense }
     * 
     * 
     */
    @OneToMany(targetEntity = SupplyDispense.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DISPENSE_SUPPLY_HJID")
    public List<SupplyDispense> getDispense() {
        if (dispense == null) {
            dispense = new ArrayList<SupplyDispense>();
        }
        return this.dispense;
    }

    /**
     * 
     * 
     */
    public void setDispense(List<SupplyDispense> dispense) {
        this.dispense = dispense;
    }

    public Supply withKind(CodeableConcept value) {
        setKind(value);
        return this;
    }

    public Supply withIdentifier(Identifier value) {
        setIdentifier(value);
        return this;
    }

    public Supply withStatus(SupplyStatus value) {
        setStatus(value);
        return this;
    }

    public Supply withOrderedItem(ResourceReference value) {
        setOrderedItem(value);
        return this;
    }

    public Supply withPatient(ResourceReference value) {
        setPatient(value);
        return this;
    }

    public Supply withDispense(SupplyDispense... values) {
        if (values!= null) {
            for (SupplyDispense value: values) {
                getDispense().add(value);
            }
        }
        return this;
    }

    public Supply withDispense(Collection<SupplyDispense> values) {
        if (values!= null) {
            getDispense().addAll(values);
        }
        return this;
    }

    public Supply withDispense(List<SupplyDispense> dispense) {
        setDispense(dispense);
        return this;
    }

    @Override
    public Supply withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public Supply withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public Supply withContained(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContained().add(value);
            }
        }
        return this;
    }

    @Override
    public Supply withContained(Collection<ResourceInline> values) {
        if (values!= null) {
            getContained().addAll(values);
        }
        return this;
    }

    @Override
    public Supply withContained(List<ResourceInline> contained) {
        setContained(contained);
        return this;
    }

    @Override
    public Supply withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public Supply withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public Supply withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public Supply withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public Supply withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public Supply withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public Supply withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Supply)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Supply that = ((Supply) object);
        {
            CodeableConcept lhsKind;
            lhsKind = this.getKind();
            CodeableConcept rhsKind;
            rhsKind = that.getKind();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kind", lhsKind), LocatorUtils.property(thatLocator, "kind", rhsKind), lhsKind, rhsKind)) {
                return false;
            }
        }
        {
            Identifier lhsIdentifier;
            lhsIdentifier = this.getIdentifier();
            Identifier rhsIdentifier;
            rhsIdentifier = that.getIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identifier", lhsIdentifier), LocatorUtils.property(thatLocator, "identifier", rhsIdentifier), lhsIdentifier, rhsIdentifier)) {
                return false;
            }
        }
        {
            SupplyStatus lhsStatus;
            lhsStatus = this.getStatus();
            SupplyStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            ResourceReference lhsOrderedItem;
            lhsOrderedItem = this.getOrderedItem();
            ResourceReference rhsOrderedItem;
            rhsOrderedItem = that.getOrderedItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orderedItem", lhsOrderedItem), LocatorUtils.property(thatLocator, "orderedItem", rhsOrderedItem), lhsOrderedItem, rhsOrderedItem)) {
                return false;
            }
        }
        {
            ResourceReference lhsPatient;
            lhsPatient = this.getPatient();
            ResourceReference rhsPatient;
            rhsPatient = that.getPatient();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "patient", lhsPatient), LocatorUtils.property(thatLocator, "patient", rhsPatient), lhsPatient, rhsPatient)) {
                return false;
            }
        }
        {
            List<SupplyDispense> lhsDispense;
            lhsDispense = (((this.dispense!= null)&&(!this.dispense.isEmpty()))?this.getDispense():null);
            List<SupplyDispense> rhsDispense;
            rhsDispense = (((that.dispense!= null)&&(!that.dispense.isEmpty()))?that.getDispense():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dispense", lhsDispense), LocatorUtils.property(thatLocator, "dispense", rhsDispense), lhsDispense, rhsDispense)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CodeableConcept theKind;
            theKind = this.getKind();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kind", theKind), currentHashCode, theKind);
        }
        {
            Identifier theIdentifier;
            theIdentifier = this.getIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifier", theIdentifier), currentHashCode, theIdentifier);
        }
        {
            SupplyStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            ResourceReference theOrderedItem;
            theOrderedItem = this.getOrderedItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orderedItem", theOrderedItem), currentHashCode, theOrderedItem);
        }
        {
            ResourceReference thePatient;
            thePatient = this.getPatient();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "patient", thePatient), currentHashCode, thePatient);
        }
        {
            List<SupplyDispense> theDispense;
            theDispense = (((this.dispense!= null)&&(!this.dispense.isEmpty()))?this.getDispense():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dispense", theDispense), currentHashCode, theDispense);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
