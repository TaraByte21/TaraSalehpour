//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A structured set of questions and their answers. The Questionnaire may contain questions, answers or both. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the underlying questions.
 * 
 * <p>Java class for Questionnaire.Question complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Questionnaire.Question">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="text" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="answerDecimal" type="{http://hl7.org/fhir}decimal"/>
 *           &lt;element name="answerInteger" type="{http://hl7.org/fhir}integer"/>
 *           &lt;element name="answerBoolean" type="{http://hl7.org/fhir}boolean"/>
 *           &lt;element name="answerDate" type="{http://hl7.org/fhir}date"/>
 *           &lt;element name="answerString" type="{http://hl7.org/fhir}string"/>
 *           &lt;element name="answerDateTime" type="{http://hl7.org/fhir}dateTime"/>
 *           &lt;element name="answerInstant" type="{http://hl7.org/fhir}instant"/>
 *         &lt;/choice>
 *         &lt;element name="choice" type="{http://hl7.org/fhir}Coding" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="options" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="dataBoolean" type="{http://hl7.org/fhir}boolean"/>
 *           &lt;element name="dataInteger" type="{http://hl7.org/fhir}integer"/>
 *           &lt;element name="dataDecimal" type="{http://hl7.org/fhir}decimal"/>
 *           &lt;element name="dataBase64Binary" type="{http://hl7.org/fhir}base64Binary"/>
 *           &lt;element name="dataInstant" type="{http://hl7.org/fhir}instant"/>
 *           &lt;element name="dataString" type="{http://hl7.org/fhir}string"/>
 *           &lt;element name="dataUri" type="{http://hl7.org/fhir}uri"/>
 *           &lt;element name="dataDate" type="{http://hl7.org/fhir}date"/>
 *           &lt;element name="dataDateTime" type="{http://hl7.org/fhir}dateTime"/>
 *           &lt;element name="dataCode" type="{http://hl7.org/fhir}code"/>
 *           &lt;element name="dataOid" type="{http://hl7.org/fhir}oid"/>
 *           &lt;element name="dataUuid" type="{http://hl7.org/fhir}uuid"/>
 *           &lt;element name="dataId" type="{http://hl7.org/fhir}id"/>
 *           &lt;element name="dataAttachment" type="{http://hl7.org/fhir}Attachment"/>
 *           &lt;element name="dataIdentifier" type="{http://hl7.org/fhir}Identifier"/>
 *           &lt;element name="dataCodeableConcept" type="{http://hl7.org/fhir}CodeableConcept"/>
 *           &lt;element name="dataCoding" type="{http://hl7.org/fhir}Coding"/>
 *           &lt;element name="dataQuantity" type="{http://hl7.org/fhir}Quantity"/>
 *           &lt;element name="dataRange" type="{http://hl7.org/fhir}Range"/>
 *           &lt;element name="dataPeriod" type="{http://hl7.org/fhir}Period"/>
 *           &lt;element name="dataRatio" type="{http://hl7.org/fhir}Ratio"/>
 *           &lt;element name="dataResource" type="{http://hl7.org/fhir}ResourceReference"/>
 *           &lt;element name="dataSampledData" type="{http://hl7.org/fhir}SampledData"/>
 *           &lt;element name="dataHumanName" type="{http://hl7.org/fhir}HumanName"/>
 *           &lt;element name="dataAddress" type="{http://hl7.org/fhir}Address"/>
 *           &lt;element name="dataContact" type="{http://hl7.org/fhir}Contact"/>
 *           &lt;element name="dataSchedule" type="{http://hl7.org/fhir}Schedule"/>
 *         &lt;/choice>
 *         &lt;element name="remarks" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="group" type="{http://hl7.org/fhir}Questionnaire.Group" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Questionnaire.Question", propOrder = {
    "name",
    "text",
    "answerDecimal",
    "answerInteger",
    "answerBoolean",
    "answerDate",
    "answerString",
    "answerDateTime",
    "answerInstant",
    "choice",
    "options",
    "dataBoolean",
    "dataInteger",
    "dataDecimal",
    "dataBase64Binary",
    "dataInstant",
    "dataString",
    "dataUri",
    "dataDate",
    "dataDateTime",
    "dataCode",
    "dataOid",
    "dataUuid",
    "dataId",
    "dataAttachment",
    "dataIdentifier",
    "dataCodeableConcept",
    "dataCoding",
    "dataQuantity",
    "dataRange",
    "dataPeriod",
    "dataRatio",
    "dataResource",
    "dataSampledData",
    "dataHumanName",
    "dataAddress",
    "dataContact",
    "dataSchedule",
    "remarks",
    "group"
})
@Entity(name = "QuestionnaireQuestion")
@Table(name = "QUESTIONNAIREQUESTION")
public class QuestionnaireQuestion
    extends BackboneElement
    implements Equals, HashCode
{

    protected CodeableConcept name;
    protected org.hl7.fhir.String text;
    protected Decimal answerDecimal;
    protected Integer answerInteger;
    protected Boolean answerBoolean;
    protected Date answerDate;
    protected org.hl7.fhir.String answerString;
    protected DateTime answerDateTime;
    protected Instant answerInstant;
    protected List<Coding> choice;
    protected ResourceReference options;
    protected Boolean dataBoolean;
    protected Integer dataInteger;
    protected Decimal dataDecimal;
    protected Base64Binary dataBase64Binary;
    protected Instant dataInstant;
    protected org.hl7.fhir.String dataString;
    protected Uri dataUri;
    protected Date dataDate;
    protected DateTime dataDateTime;
    protected Code dataCode;
    protected Oid dataOid;
    protected Uuid dataUuid;
    protected Id dataId;
    protected Attachment dataAttachment;
    protected Identifier dataIdentifier;
    protected CodeableConcept dataCodeableConcept;
    protected Coding dataCoding;
    protected Quantity dataQuantity;
    protected Range dataRange;
    protected Period dataPeriod;
    protected Ratio dataRatio;
    protected ResourceReference dataResource;
    protected SampledData dataSampledData;
    protected HumanName dataHumanName;
    protected Address dataAddress;
    protected Contact dataContact;
    protected Schedule dataSchedule;
    protected org.hl7.fhir.String remarks;
    protected List<QuestionnaireGroup> group;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__QUESTIONNAIREQUESTION__0")
    public CodeableConcept getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setName(CodeableConcept value) {
        this.name = value;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEXT_QUESTIONNAIREQUESTION_H_0")
    public org.hl7.fhir.String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setText(org.hl7.fhir.String value) {
        this.text = value;
    }

    /**
     * Gets the value of the answerDecimal property.
     * 
     * @return
     *     possible object is
     *     {@link Decimal }
     *     
     */
    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERDECIMAL_QUESTIONNAIREQ_0")
    public Decimal getAnswerDecimal() {
        return answerDecimal;
    }

    /**
     * Sets the value of the answerDecimal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Decimal }
     *     
     */
    public void setAnswerDecimal(Decimal value) {
        this.answerDecimal = value;
    }

    /**
     * Gets the value of the answerInteger property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERINTEGER_QUESTIONNAIREQ_0")
    public Integer getAnswerInteger() {
        return answerInteger;
    }

    /**
     * Sets the value of the answerInteger property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setAnswerInteger(Integer value) {
        this.answerInteger = value;
    }

    /**
     * Gets the value of the answerBoolean property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERBOOLEAN_QUESTIONNAIREQ_0")
    public Boolean getAnswerBoolean() {
        return answerBoolean;
    }

    /**
     * Sets the value of the answerBoolean property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAnswerBoolean(Boolean value) {
        this.answerBoolean = value;
    }

    /**
     * Gets the value of the answerDate property.
     * 
     * @return
     *     possible object is
     *     {@link Date }
     *     
     */
    @ManyToOne(targetEntity = Date.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERDATE_QUESTIONNAIREQUES_0")
    public Date getAnswerDate() {
        return answerDate;
    }

    /**
     * Sets the value of the answerDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Date }
     *     
     */
    public void setAnswerDate(Date value) {
        this.answerDate = value;
    }

    /**
     * Gets the value of the answerString property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERSTRING_QUESTIONNAIREQU_0")
    public org.hl7.fhir.String getAnswerString() {
        return answerString;
    }

    /**
     * Sets the value of the answerString property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setAnswerString(org.hl7.fhir.String value) {
        this.answerString = value;
    }

    /**
     * Gets the value of the answerDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERDATETIME_QUESTIONNAIRE_0")
    public DateTime getAnswerDateTime() {
        return answerDateTime;
    }

    /**
     * Sets the value of the answerDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setAnswerDateTime(DateTime value) {
        this.answerDateTime = value;
    }

    /**
     * Gets the value of the answerInstant property.
     * 
     * @return
     *     possible object is
     *     {@link Instant }
     *     
     */
    @ManyToOne(targetEntity = Instant.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ANSWERINSTANT_QUESTIONNAIREQ_0")
    public Instant getAnswerInstant() {
        return answerInstant;
    }

    /**
     * Sets the value of the answerInstant property.
     * 
     * @param value
     *     allowed object is
     *     {@link Instant }
     *     
     */
    public void setAnswerInstant(Instant value) {
        this.answerInstant = value;
    }

    /**
     * Gets the value of the choice property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the choice property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChoice().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Coding }
     * 
     * 
     */
    @OneToMany(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CHOICE_QUESTIONNAIREQUESTION_0")
    public List<Coding> getChoice() {
        if (choice == null) {
            choice = new ArrayList<Coding>();
        }
        return this.choice;
    }

    /**
     * 
     * 
     */
    public void setChoice(List<Coding> choice) {
        this.choice = choice;
    }

    /**
     * Gets the value of the options property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "OPTIONS__QUESTIONNAIREQUESTI_0")
    public ResourceReference getOptions() {
        return options;
    }

    /**
     * Sets the value of the options property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setOptions(ResourceReference value) {
        this.options = value;
    }

    /**
     * Gets the value of the dataBoolean property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATABOOLEAN_QUESTIONNAIREQUE_0")
    public Boolean getDataBoolean() {
        return dataBoolean;
    }

    /**
     * Sets the value of the dataBoolean property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDataBoolean(Boolean value) {
        this.dataBoolean = value;
    }

    /**
     * Gets the value of the dataInteger property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAINTEGER_QUESTIONNAIREQUE_0")
    public Integer getDataInteger() {
        return dataInteger;
    }

    /**
     * Sets the value of the dataInteger property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setDataInteger(Integer value) {
        this.dataInteger = value;
    }

    /**
     * Gets the value of the dataDecimal property.
     * 
     * @return
     *     possible object is
     *     {@link Decimal }
     *     
     */
    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATADECIMAL_QUESTIONNAIREQUE_0")
    public Decimal getDataDecimal() {
        return dataDecimal;
    }

    /**
     * Sets the value of the dataDecimal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Decimal }
     *     
     */
    public void setDataDecimal(Decimal value) {
        this.dataDecimal = value;
    }

    /**
     * Gets the value of the dataBase64Binary property.
     * 
     * @return
     *     possible object is
     *     {@link Base64Binary }
     *     
     */
    @ManyToOne(targetEntity = Base64Binary.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATABASE64BINARY_QUESTIONNAI_0")
    public Base64Binary getDataBase64Binary() {
        return dataBase64Binary;
    }

    /**
     * Sets the value of the dataBase64Binary property.
     * 
     * @param value
     *     allowed object is
     *     {@link Base64Binary }
     *     
     */
    public void setDataBase64Binary(Base64Binary value) {
        this.dataBase64Binary = value;
    }

    /**
     * Gets the value of the dataInstant property.
     * 
     * @return
     *     possible object is
     *     {@link Instant }
     *     
     */
    @ManyToOne(targetEntity = Instant.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAINSTANT_QUESTIONNAIREQUE_0")
    public Instant getDataInstant() {
        return dataInstant;
    }

    /**
     * Sets the value of the dataInstant property.
     * 
     * @param value
     *     allowed object is
     *     {@link Instant }
     *     
     */
    public void setDataInstant(Instant value) {
        this.dataInstant = value;
    }

    /**
     * Gets the value of the dataString property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATASTRING_QUESTIONNAIREQUES_0")
    public org.hl7.fhir.String getDataString() {
        return dataString;
    }

    /**
     * Sets the value of the dataString property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setDataString(org.hl7.fhir.String value) {
        this.dataString = value;
    }

    /**
     * Gets the value of the dataUri property.
     * 
     * @return
     *     possible object is
     *     {@link Uri }
     *     
     */
    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAURI_QUESTIONNAIREQUESTIO_0")
    public Uri getDataUri() {
        return dataUri;
    }

    /**
     * Sets the value of the dataUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link Uri }
     *     
     */
    public void setDataUri(Uri value) {
        this.dataUri = value;
    }

    /**
     * Gets the value of the dataDate property.
     * 
     * @return
     *     possible object is
     *     {@link Date }
     *     
     */
    @ManyToOne(targetEntity = Date.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATADATE_QUESTIONNAIREQUESTI_0")
    public Date getDataDate() {
        return dataDate;
    }

    /**
     * Sets the value of the dataDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Date }
     *     
     */
    public void setDataDate(Date value) {
        this.dataDate = value;
    }

    /**
     * Gets the value of the dataDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATADATETIME_QUESTIONNAIREQU_0")
    public DateTime getDataDateTime() {
        return dataDateTime;
    }

    /**
     * Sets the value of the dataDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setDataDateTime(DateTime value) {
        this.dataDateTime = value;
    }

    /**
     * Gets the value of the dataCode property.
     * 
     * @return
     *     possible object is
     *     {@link Code }
     *     
     */
    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATACODE_QUESTIONNAIREQUESTI_0")
    public Code getDataCode() {
        return dataCode;
    }

    /**
     * Sets the value of the dataCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link Code }
     *     
     */
    public void setDataCode(Code value) {
        this.dataCode = value;
    }

    /**
     * Gets the value of the dataOid property.
     * 
     * @return
     *     possible object is
     *     {@link Oid }
     *     
     */
    @ManyToOne(targetEntity = Oid.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAOID_QUESTIONNAIREQUESTIO_0")
    public Oid getDataOid() {
        return dataOid;
    }

    /**
     * Sets the value of the dataOid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Oid }
     *     
     */
    public void setDataOid(Oid value) {
        this.dataOid = value;
    }

    /**
     * Gets the value of the dataUuid property.
     * 
     * @return
     *     possible object is
     *     {@link Uuid }
     *     
     */
    @ManyToOne(targetEntity = Uuid.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAUUID_QUESTIONNAIREQUESTI_0")
    public Uuid getDataUuid() {
        return dataUuid;
    }

    /**
     * Sets the value of the dataUuid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Uuid }
     *     
     */
    public void setDataUuid(Uuid value) {
        this.dataUuid = value;
    }

    /**
     * Gets the value of the dataId property.
     * 
     * @return
     *     possible object is
     *     {@link Id }
     *     
     */
    @ManyToOne(targetEntity = Id.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAID_QUESTIONNAIREQUESTION_0")
    public Id getDataId() {
        return dataId;
    }

    /**
     * Sets the value of the dataId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Id }
     *     
     */
    public void setDataId(Id value) {
        this.dataId = value;
    }

    /**
     * Gets the value of the dataAttachment property.
     * 
     * @return
     *     possible object is
     *     {@link Attachment }
     *     
     */
    @ManyToOne(targetEntity = Attachment.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAATTACHMENT_QUESTIONNAIRE_0")
    public Attachment getDataAttachment() {
        return dataAttachment;
    }

    /**
     * Sets the value of the dataAttachment property.
     * 
     * @param value
     *     allowed object is
     *     {@link Attachment }
     *     
     */
    public void setDataAttachment(Attachment value) {
        this.dataAttachment = value;
    }

    /**
     * Gets the value of the dataIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    @ManyToOne(targetEntity = Identifier.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAIDENTIFIER_QUESTIONNAIRE_0")
    public Identifier getDataIdentifier() {
        return dataIdentifier;
    }

    /**
     * Sets the value of the dataIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setDataIdentifier(Identifier value) {
        this.dataIdentifier = value;
    }

    /**
     * Gets the value of the dataCodeableConcept property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATACODEABLECONCEPT_QUESTION_0")
    public CodeableConcept getDataCodeableConcept() {
        return dataCodeableConcept;
    }

    /**
     * Sets the value of the dataCodeableConcept property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setDataCodeableConcept(CodeableConcept value) {
        this.dataCodeableConcept = value;
    }

    /**
     * Gets the value of the dataCoding property.
     * 
     * @return
     *     possible object is
     *     {@link Coding }
     *     
     */
    @ManyToOne(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATACODING_QUESTIONNAIREQUES_0")
    public Coding getDataCoding() {
        return dataCoding;
    }

    /**
     * Sets the value of the dataCoding property.
     * 
     * @param value
     *     allowed object is
     *     {@link Coding }
     *     
     */
    public void setDataCoding(Coding value) {
        this.dataCoding = value;
    }

    /**
     * Gets the value of the dataQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link Quantity }
     *     
     */
    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAQUANTITY_QUESTIONNAIREQU_0")
    public Quantity getDataQuantity() {
        return dataQuantity;
    }

    /**
     * Sets the value of the dataQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Quantity }
     *     
     */
    public void setDataQuantity(Quantity value) {
        this.dataQuantity = value;
    }

    /**
     * Gets the value of the dataRange property.
     * 
     * @return
     *     possible object is
     *     {@link Range }
     *     
     */
    @ManyToOne(targetEntity = Range.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATARANGE_QUESTIONNAIREQUEST_0")
    public Range getDataRange() {
        return dataRange;
    }

    /**
     * Sets the value of the dataRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link Range }
     *     
     */
    public void setDataRange(Range value) {
        this.dataRange = value;
    }

    /**
     * Gets the value of the dataPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAPERIOD_QUESTIONNAIREQUES_0")
    public Period getDataPeriod() {
        return dataPeriod;
    }

    /**
     * Sets the value of the dataPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setDataPeriod(Period value) {
        this.dataPeriod = value;
    }

    /**
     * Gets the value of the dataRatio property.
     * 
     * @return
     *     possible object is
     *     {@link Ratio }
     *     
     */
    @ManyToOne(targetEntity = Ratio.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATARATIO_QUESTIONNAIREQUEST_0")
    public Ratio getDataRatio() {
        return dataRatio;
    }

    /**
     * Sets the value of the dataRatio property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ratio }
     *     
     */
    public void setDataRatio(Ratio value) {
        this.dataRatio = value;
    }

    /**
     * Gets the value of the dataResource property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATARESOURCE_QUESTIONNAIREQU_0")
    public ResourceReference getDataResource() {
        return dataResource;
    }

    /**
     * Sets the value of the dataResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setDataResource(ResourceReference value) {
        this.dataResource = value;
    }

    /**
     * Gets the value of the dataSampledData property.
     * 
     * @return
     *     possible object is
     *     {@link SampledData }
     *     
     */
    @ManyToOne(targetEntity = SampledData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATASAMPLEDDATA_QUESTIONNAIR_0")
    public SampledData getDataSampledData() {
        return dataSampledData;
    }

    /**
     * Sets the value of the dataSampledData property.
     * 
     * @param value
     *     allowed object is
     *     {@link SampledData }
     *     
     */
    public void setDataSampledData(SampledData value) {
        this.dataSampledData = value;
    }

    /**
     * Gets the value of the dataHumanName property.
     * 
     * @return
     *     possible object is
     *     {@link HumanName }
     *     
     */
    @ManyToOne(targetEntity = HumanName.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAHUMANNAME_QUESTIONNAIREQ_0")
    public HumanName getDataHumanName() {
        return dataHumanName;
    }

    /**
     * Sets the value of the dataHumanName property.
     * 
     * @param value
     *     allowed object is
     *     {@link HumanName }
     *     
     */
    public void setDataHumanName(HumanName value) {
        this.dataHumanName = value;
    }

    /**
     * Gets the value of the dataAddress property.
     * 
     * @return
     *     possible object is
     *     {@link Address }
     *     
     */
    @ManyToOne(targetEntity = Address.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAADDRESS_QUESTIONNAIREQUE_0")
    public Address getDataAddress() {
        return dataAddress;
    }

    /**
     * Sets the value of the dataAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link Address }
     *     
     */
    public void setDataAddress(Address value) {
        this.dataAddress = value;
    }

    /**
     * Gets the value of the dataContact property.
     * 
     * @return
     *     possible object is
     *     {@link Contact }
     *     
     */
    @ManyToOne(targetEntity = Contact.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATACONTACT_QUESTIONNAIREQUE_0")
    public Contact getDataContact() {
        return dataContact;
    }

    /**
     * Sets the value of the dataContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link Contact }
     *     
     */
    public void setDataContact(Contact value) {
        this.dataContact = value;
    }

    /**
     * Gets the value of the dataSchedule property.
     * 
     * @return
     *     possible object is
     *     {@link Schedule }
     *     
     */
    @ManyToOne(targetEntity = Schedule.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATASCHEDULE_QUESTIONNAIREQU_0")
    public Schedule getDataSchedule() {
        return dataSchedule;
    }

    /**
     * Sets the value of the dataSchedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link Schedule }
     *     
     */
    public void setDataSchedule(Schedule value) {
        this.dataSchedule = value;
    }

    /**
     * Gets the value of the remarks property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REMARKS_QUESTIONNAIREQUESTIO_0")
    public org.hl7.fhir.String getRemarks() {
        return remarks;
    }

    /**
     * Sets the value of the remarks property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setRemarks(org.hl7.fhir.String value) {
        this.remarks = value;
    }

    /**
     * Gets the value of the group property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the group property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionnaireGroup }
     * 
     * 
     */
    @OneToMany(targetEntity = QuestionnaireGroup.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GROUP__QUESTIONNAIREQUESTION_0")
    public List<QuestionnaireGroup> getGroup() {
        if (group == null) {
            group = new ArrayList<QuestionnaireGroup>();
        }
        return this.group;
    }

    /**
     * 
     * 
     */
    public void setGroup(List<QuestionnaireGroup> group) {
        this.group = group;
    }

    public QuestionnaireQuestion withName(CodeableConcept value) {
        setName(value);
        return this;
    }

    public QuestionnaireQuestion withText(org.hl7.fhir.String value) {
        setText(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerDecimal(Decimal value) {
        setAnswerDecimal(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerInteger(Integer value) {
        setAnswerInteger(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerBoolean(Boolean value) {
        setAnswerBoolean(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerDate(Date value) {
        setAnswerDate(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerString(org.hl7.fhir.String value) {
        setAnswerString(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerDateTime(DateTime value) {
        setAnswerDateTime(value);
        return this;
    }

    public QuestionnaireQuestion withAnswerInstant(Instant value) {
        setAnswerInstant(value);
        return this;
    }

    public QuestionnaireQuestion withChoice(Coding... values) {
        if (values!= null) {
            for (Coding value: values) {
                getChoice().add(value);
            }
        }
        return this;
    }

    public QuestionnaireQuestion withChoice(Collection<Coding> values) {
        if (values!= null) {
            getChoice().addAll(values);
        }
        return this;
    }

    public QuestionnaireQuestion withChoice(List<Coding> choice) {
        setChoice(choice);
        return this;
    }

    public QuestionnaireQuestion withOptions(ResourceReference value) {
        setOptions(value);
        return this;
    }

    public QuestionnaireQuestion withDataBoolean(Boolean value) {
        setDataBoolean(value);
        return this;
    }

    public QuestionnaireQuestion withDataInteger(Integer value) {
        setDataInteger(value);
        return this;
    }

    public QuestionnaireQuestion withDataDecimal(Decimal value) {
        setDataDecimal(value);
        return this;
    }

    public QuestionnaireQuestion withDataBase64Binary(Base64Binary value) {
        setDataBase64Binary(value);
        return this;
    }

    public QuestionnaireQuestion withDataInstant(Instant value) {
        setDataInstant(value);
        return this;
    }

    public QuestionnaireQuestion withDataString(org.hl7.fhir.String value) {
        setDataString(value);
        return this;
    }

    public QuestionnaireQuestion withDataUri(Uri value) {
        setDataUri(value);
        return this;
    }

    public QuestionnaireQuestion withDataDate(Date value) {
        setDataDate(value);
        return this;
    }

    public QuestionnaireQuestion withDataDateTime(DateTime value) {
        setDataDateTime(value);
        return this;
    }

    public QuestionnaireQuestion withDataCode(Code value) {
        setDataCode(value);
        return this;
    }

    public QuestionnaireQuestion withDataOid(Oid value) {
        setDataOid(value);
        return this;
    }

    public QuestionnaireQuestion withDataUuid(Uuid value) {
        setDataUuid(value);
        return this;
    }

    public QuestionnaireQuestion withDataId(Id value) {
        setDataId(value);
        return this;
    }

    public QuestionnaireQuestion withDataAttachment(Attachment value) {
        setDataAttachment(value);
        return this;
    }

    public QuestionnaireQuestion withDataIdentifier(Identifier value) {
        setDataIdentifier(value);
        return this;
    }

    public QuestionnaireQuestion withDataCodeableConcept(CodeableConcept value) {
        setDataCodeableConcept(value);
        return this;
    }

    public QuestionnaireQuestion withDataCoding(Coding value) {
        setDataCoding(value);
        return this;
    }

    public QuestionnaireQuestion withDataQuantity(Quantity value) {
        setDataQuantity(value);
        return this;
    }

    public QuestionnaireQuestion withDataRange(Range value) {
        setDataRange(value);
        return this;
    }

    public QuestionnaireQuestion withDataPeriod(Period value) {
        setDataPeriod(value);
        return this;
    }

    public QuestionnaireQuestion withDataRatio(Ratio value) {
        setDataRatio(value);
        return this;
    }

    public QuestionnaireQuestion withDataResource(ResourceReference value) {
        setDataResource(value);
        return this;
    }

    public QuestionnaireQuestion withDataSampledData(SampledData value) {
        setDataSampledData(value);
        return this;
    }

    public QuestionnaireQuestion withDataHumanName(HumanName value) {
        setDataHumanName(value);
        return this;
    }

    public QuestionnaireQuestion withDataAddress(Address value) {
        setDataAddress(value);
        return this;
    }

    public QuestionnaireQuestion withDataContact(Contact value) {
        setDataContact(value);
        return this;
    }

    public QuestionnaireQuestion withDataSchedule(Schedule value) {
        setDataSchedule(value);
        return this;
    }

    public QuestionnaireQuestion withRemarks(org.hl7.fhir.String value) {
        setRemarks(value);
        return this;
    }

    public QuestionnaireQuestion withGroup(QuestionnaireGroup... values) {
        if (values!= null) {
            for (QuestionnaireGroup value: values) {
                getGroup().add(value);
            }
        }
        return this;
    }

    public QuestionnaireQuestion withGroup(Collection<QuestionnaireGroup> values) {
        if (values!= null) {
            getGroup().addAll(values);
        }
        return this;
    }

    public QuestionnaireQuestion withGroup(List<QuestionnaireGroup> group) {
        setGroup(group);
        return this;
    }

    @Override
    public QuestionnaireQuestion withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public QuestionnaireQuestion withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireQuestion withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public QuestionnaireQuestion withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public QuestionnaireQuestion withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireQuestion withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public QuestionnaireQuestion withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof QuestionnaireQuestion)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final QuestionnaireQuestion that = ((QuestionnaireQuestion) object);
        {
            CodeableConcept lhsName;
            lhsName = this.getName();
            CodeableConcept rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsText;
            lhsText = this.getText();
            org.hl7.fhir.String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        {
            Decimal lhsAnswerDecimal;
            lhsAnswerDecimal = this.getAnswerDecimal();
            Decimal rhsAnswerDecimal;
            rhsAnswerDecimal = that.getAnswerDecimal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerDecimal", lhsAnswerDecimal), LocatorUtils.property(thatLocator, "answerDecimal", rhsAnswerDecimal), lhsAnswerDecimal, rhsAnswerDecimal)) {
                return false;
            }
        }
        {
            Integer lhsAnswerInteger;
            lhsAnswerInteger = this.getAnswerInteger();
            Integer rhsAnswerInteger;
            rhsAnswerInteger = that.getAnswerInteger();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerInteger", lhsAnswerInteger), LocatorUtils.property(thatLocator, "answerInteger", rhsAnswerInteger), lhsAnswerInteger, rhsAnswerInteger)) {
                return false;
            }
        }
        {
            Boolean lhsAnswerBoolean;
            lhsAnswerBoolean = this.getAnswerBoolean();
            Boolean rhsAnswerBoolean;
            rhsAnswerBoolean = that.getAnswerBoolean();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerBoolean", lhsAnswerBoolean), LocatorUtils.property(thatLocator, "answerBoolean", rhsAnswerBoolean), lhsAnswerBoolean, rhsAnswerBoolean)) {
                return false;
            }
        }
        {
            Date lhsAnswerDate;
            lhsAnswerDate = this.getAnswerDate();
            Date rhsAnswerDate;
            rhsAnswerDate = that.getAnswerDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerDate", lhsAnswerDate), LocatorUtils.property(thatLocator, "answerDate", rhsAnswerDate), lhsAnswerDate, rhsAnswerDate)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsAnswerString;
            lhsAnswerString = this.getAnswerString();
            org.hl7.fhir.String rhsAnswerString;
            rhsAnswerString = that.getAnswerString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerString", lhsAnswerString), LocatorUtils.property(thatLocator, "answerString", rhsAnswerString), lhsAnswerString, rhsAnswerString)) {
                return false;
            }
        }
        {
            DateTime lhsAnswerDateTime;
            lhsAnswerDateTime = this.getAnswerDateTime();
            DateTime rhsAnswerDateTime;
            rhsAnswerDateTime = that.getAnswerDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerDateTime", lhsAnswerDateTime), LocatorUtils.property(thatLocator, "answerDateTime", rhsAnswerDateTime), lhsAnswerDateTime, rhsAnswerDateTime)) {
                return false;
            }
        }
        {
            Instant lhsAnswerInstant;
            lhsAnswerInstant = this.getAnswerInstant();
            Instant rhsAnswerInstant;
            rhsAnswerInstant = that.getAnswerInstant();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "answerInstant", lhsAnswerInstant), LocatorUtils.property(thatLocator, "answerInstant", rhsAnswerInstant), lhsAnswerInstant, rhsAnswerInstant)) {
                return false;
            }
        }
        {
            List<Coding> lhsChoice;
            lhsChoice = (((this.choice!= null)&&(!this.choice.isEmpty()))?this.getChoice():null);
            List<Coding> rhsChoice;
            rhsChoice = (((that.choice!= null)&&(!that.choice.isEmpty()))?that.getChoice():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "choice", lhsChoice), LocatorUtils.property(thatLocator, "choice", rhsChoice), lhsChoice, rhsChoice)) {
                return false;
            }
        }
        {
            ResourceReference lhsOptions;
            lhsOptions = this.getOptions();
            ResourceReference rhsOptions;
            rhsOptions = that.getOptions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "options", lhsOptions), LocatorUtils.property(thatLocator, "options", rhsOptions), lhsOptions, rhsOptions)) {
                return false;
            }
        }
        {
            Boolean lhsDataBoolean;
            lhsDataBoolean = this.getDataBoolean();
            Boolean rhsDataBoolean;
            rhsDataBoolean = that.getDataBoolean();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataBoolean", lhsDataBoolean), LocatorUtils.property(thatLocator, "dataBoolean", rhsDataBoolean), lhsDataBoolean, rhsDataBoolean)) {
                return false;
            }
        }
        {
            Integer lhsDataInteger;
            lhsDataInteger = this.getDataInteger();
            Integer rhsDataInteger;
            rhsDataInteger = that.getDataInteger();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataInteger", lhsDataInteger), LocatorUtils.property(thatLocator, "dataInteger", rhsDataInteger), lhsDataInteger, rhsDataInteger)) {
                return false;
            }
        }
        {
            Decimal lhsDataDecimal;
            lhsDataDecimal = this.getDataDecimal();
            Decimal rhsDataDecimal;
            rhsDataDecimal = that.getDataDecimal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataDecimal", lhsDataDecimal), LocatorUtils.property(thatLocator, "dataDecimal", rhsDataDecimal), lhsDataDecimal, rhsDataDecimal)) {
                return false;
            }
        }
        {
            Base64Binary lhsDataBase64Binary;
            lhsDataBase64Binary = this.getDataBase64Binary();
            Base64Binary rhsDataBase64Binary;
            rhsDataBase64Binary = that.getDataBase64Binary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataBase64Binary", lhsDataBase64Binary), LocatorUtils.property(thatLocator, "dataBase64Binary", rhsDataBase64Binary), lhsDataBase64Binary, rhsDataBase64Binary)) {
                return false;
            }
        }
        {
            Instant lhsDataInstant;
            lhsDataInstant = this.getDataInstant();
            Instant rhsDataInstant;
            rhsDataInstant = that.getDataInstant();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataInstant", lhsDataInstant), LocatorUtils.property(thatLocator, "dataInstant", rhsDataInstant), lhsDataInstant, rhsDataInstant)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsDataString;
            lhsDataString = this.getDataString();
            org.hl7.fhir.String rhsDataString;
            rhsDataString = that.getDataString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataString", lhsDataString), LocatorUtils.property(thatLocator, "dataString", rhsDataString), lhsDataString, rhsDataString)) {
                return false;
            }
        }
        {
            Uri lhsDataUri;
            lhsDataUri = this.getDataUri();
            Uri rhsDataUri;
            rhsDataUri = that.getDataUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataUri", lhsDataUri), LocatorUtils.property(thatLocator, "dataUri", rhsDataUri), lhsDataUri, rhsDataUri)) {
                return false;
            }
        }
        {
            Date lhsDataDate;
            lhsDataDate = this.getDataDate();
            Date rhsDataDate;
            rhsDataDate = that.getDataDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataDate", lhsDataDate), LocatorUtils.property(thatLocator, "dataDate", rhsDataDate), lhsDataDate, rhsDataDate)) {
                return false;
            }
        }
        {
            DateTime lhsDataDateTime;
            lhsDataDateTime = this.getDataDateTime();
            DateTime rhsDataDateTime;
            rhsDataDateTime = that.getDataDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataDateTime", lhsDataDateTime), LocatorUtils.property(thatLocator, "dataDateTime", rhsDataDateTime), lhsDataDateTime, rhsDataDateTime)) {
                return false;
            }
        }
        {
            Code lhsDataCode;
            lhsDataCode = this.getDataCode();
            Code rhsDataCode;
            rhsDataCode = that.getDataCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataCode", lhsDataCode), LocatorUtils.property(thatLocator, "dataCode", rhsDataCode), lhsDataCode, rhsDataCode)) {
                return false;
            }
        }
        {
            Oid lhsDataOid;
            lhsDataOid = this.getDataOid();
            Oid rhsDataOid;
            rhsDataOid = that.getDataOid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataOid", lhsDataOid), LocatorUtils.property(thatLocator, "dataOid", rhsDataOid), lhsDataOid, rhsDataOid)) {
                return false;
            }
        }
        {
            Uuid lhsDataUuid;
            lhsDataUuid = this.getDataUuid();
            Uuid rhsDataUuid;
            rhsDataUuid = that.getDataUuid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataUuid", lhsDataUuid), LocatorUtils.property(thatLocator, "dataUuid", rhsDataUuid), lhsDataUuid, rhsDataUuid)) {
                return false;
            }
        }
        {
            Id lhsDataId;
            lhsDataId = this.getDataId();
            Id rhsDataId;
            rhsDataId = that.getDataId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataId", lhsDataId), LocatorUtils.property(thatLocator, "dataId", rhsDataId), lhsDataId, rhsDataId)) {
                return false;
            }
        }
        {
            Attachment lhsDataAttachment;
            lhsDataAttachment = this.getDataAttachment();
            Attachment rhsDataAttachment;
            rhsDataAttachment = that.getDataAttachment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataAttachment", lhsDataAttachment), LocatorUtils.property(thatLocator, "dataAttachment", rhsDataAttachment), lhsDataAttachment, rhsDataAttachment)) {
                return false;
            }
        }
        {
            Identifier lhsDataIdentifier;
            lhsDataIdentifier = this.getDataIdentifier();
            Identifier rhsDataIdentifier;
            rhsDataIdentifier = that.getDataIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataIdentifier", lhsDataIdentifier), LocatorUtils.property(thatLocator, "dataIdentifier", rhsDataIdentifier), lhsDataIdentifier, rhsDataIdentifier)) {
                return false;
            }
        }
        {
            CodeableConcept lhsDataCodeableConcept;
            lhsDataCodeableConcept = this.getDataCodeableConcept();
            CodeableConcept rhsDataCodeableConcept;
            rhsDataCodeableConcept = that.getDataCodeableConcept();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataCodeableConcept", lhsDataCodeableConcept), LocatorUtils.property(thatLocator, "dataCodeableConcept", rhsDataCodeableConcept), lhsDataCodeableConcept, rhsDataCodeableConcept)) {
                return false;
            }
        }
        {
            Coding lhsDataCoding;
            lhsDataCoding = this.getDataCoding();
            Coding rhsDataCoding;
            rhsDataCoding = that.getDataCoding();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataCoding", lhsDataCoding), LocatorUtils.property(thatLocator, "dataCoding", rhsDataCoding), lhsDataCoding, rhsDataCoding)) {
                return false;
            }
        }
        {
            Quantity lhsDataQuantity;
            lhsDataQuantity = this.getDataQuantity();
            Quantity rhsDataQuantity;
            rhsDataQuantity = that.getDataQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataQuantity", lhsDataQuantity), LocatorUtils.property(thatLocator, "dataQuantity", rhsDataQuantity), lhsDataQuantity, rhsDataQuantity)) {
                return false;
            }
        }
        {
            Range lhsDataRange;
            lhsDataRange = this.getDataRange();
            Range rhsDataRange;
            rhsDataRange = that.getDataRange();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataRange", lhsDataRange), LocatorUtils.property(thatLocator, "dataRange", rhsDataRange), lhsDataRange, rhsDataRange)) {
                return false;
            }
        }
        {
            Period lhsDataPeriod;
            lhsDataPeriod = this.getDataPeriod();
            Period rhsDataPeriod;
            rhsDataPeriod = that.getDataPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataPeriod", lhsDataPeriod), LocatorUtils.property(thatLocator, "dataPeriod", rhsDataPeriod), lhsDataPeriod, rhsDataPeriod)) {
                return false;
            }
        }
        {
            Ratio lhsDataRatio;
            lhsDataRatio = this.getDataRatio();
            Ratio rhsDataRatio;
            rhsDataRatio = that.getDataRatio();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataRatio", lhsDataRatio), LocatorUtils.property(thatLocator, "dataRatio", rhsDataRatio), lhsDataRatio, rhsDataRatio)) {
                return false;
            }
        }
        {
            ResourceReference lhsDataResource;
            lhsDataResource = this.getDataResource();
            ResourceReference rhsDataResource;
            rhsDataResource = that.getDataResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataResource", lhsDataResource), LocatorUtils.property(thatLocator, "dataResource", rhsDataResource), lhsDataResource, rhsDataResource)) {
                return false;
            }
        }
        {
            SampledData lhsDataSampledData;
            lhsDataSampledData = this.getDataSampledData();
            SampledData rhsDataSampledData;
            rhsDataSampledData = that.getDataSampledData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataSampledData", lhsDataSampledData), LocatorUtils.property(thatLocator, "dataSampledData", rhsDataSampledData), lhsDataSampledData, rhsDataSampledData)) {
                return false;
            }
        }
        {
            HumanName lhsDataHumanName;
            lhsDataHumanName = this.getDataHumanName();
            HumanName rhsDataHumanName;
            rhsDataHumanName = that.getDataHumanName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataHumanName", lhsDataHumanName), LocatorUtils.property(thatLocator, "dataHumanName", rhsDataHumanName), lhsDataHumanName, rhsDataHumanName)) {
                return false;
            }
        }
        {
            Address lhsDataAddress;
            lhsDataAddress = this.getDataAddress();
            Address rhsDataAddress;
            rhsDataAddress = that.getDataAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataAddress", lhsDataAddress), LocatorUtils.property(thatLocator, "dataAddress", rhsDataAddress), lhsDataAddress, rhsDataAddress)) {
                return false;
            }
        }
        {
            Contact lhsDataContact;
            lhsDataContact = this.getDataContact();
            Contact rhsDataContact;
            rhsDataContact = that.getDataContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataContact", lhsDataContact), LocatorUtils.property(thatLocator, "dataContact", rhsDataContact), lhsDataContact, rhsDataContact)) {
                return false;
            }
        }
        {
            Schedule lhsDataSchedule;
            lhsDataSchedule = this.getDataSchedule();
            Schedule rhsDataSchedule;
            rhsDataSchedule = that.getDataSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataSchedule", lhsDataSchedule), LocatorUtils.property(thatLocator, "dataSchedule", rhsDataSchedule), lhsDataSchedule, rhsDataSchedule)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsRemarks;
            lhsRemarks = this.getRemarks();
            org.hl7.fhir.String rhsRemarks;
            rhsRemarks = that.getRemarks();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "remarks", lhsRemarks), LocatorUtils.property(thatLocator, "remarks", rhsRemarks), lhsRemarks, rhsRemarks)) {
                return false;
            }
        }
        {
            List<QuestionnaireGroup> lhsGroup;
            lhsGroup = (((this.group!= null)&&(!this.group.isEmpty()))?this.getGroup():null);
            List<QuestionnaireGroup> rhsGroup;
            rhsGroup = (((that.group!= null)&&(!that.group.isEmpty()))?that.getGroup():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "group", lhsGroup), LocatorUtils.property(thatLocator, "group", rhsGroup), lhsGroup, rhsGroup)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CodeableConcept theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            org.hl7.fhir.String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        {
            Decimal theAnswerDecimal;
            theAnswerDecimal = this.getAnswerDecimal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerDecimal", theAnswerDecimal), currentHashCode, theAnswerDecimal);
        }
        {
            Integer theAnswerInteger;
            theAnswerInteger = this.getAnswerInteger();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerInteger", theAnswerInteger), currentHashCode, theAnswerInteger);
        }
        {
            Boolean theAnswerBoolean;
            theAnswerBoolean = this.getAnswerBoolean();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerBoolean", theAnswerBoolean), currentHashCode, theAnswerBoolean);
        }
        {
            Date theAnswerDate;
            theAnswerDate = this.getAnswerDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerDate", theAnswerDate), currentHashCode, theAnswerDate);
        }
        {
            org.hl7.fhir.String theAnswerString;
            theAnswerString = this.getAnswerString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerString", theAnswerString), currentHashCode, theAnswerString);
        }
        {
            DateTime theAnswerDateTime;
            theAnswerDateTime = this.getAnswerDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerDateTime", theAnswerDateTime), currentHashCode, theAnswerDateTime);
        }
        {
            Instant theAnswerInstant;
            theAnswerInstant = this.getAnswerInstant();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "answerInstant", theAnswerInstant), currentHashCode, theAnswerInstant);
        }
        {
            List<Coding> theChoice;
            theChoice = (((this.choice!= null)&&(!this.choice.isEmpty()))?this.getChoice():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "choice", theChoice), currentHashCode, theChoice);
        }
        {
            ResourceReference theOptions;
            theOptions = this.getOptions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "options", theOptions), currentHashCode, theOptions);
        }
        {
            Boolean theDataBoolean;
            theDataBoolean = this.getDataBoolean();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataBoolean", theDataBoolean), currentHashCode, theDataBoolean);
        }
        {
            Integer theDataInteger;
            theDataInteger = this.getDataInteger();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataInteger", theDataInteger), currentHashCode, theDataInteger);
        }
        {
            Decimal theDataDecimal;
            theDataDecimal = this.getDataDecimal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataDecimal", theDataDecimal), currentHashCode, theDataDecimal);
        }
        {
            Base64Binary theDataBase64Binary;
            theDataBase64Binary = this.getDataBase64Binary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataBase64Binary", theDataBase64Binary), currentHashCode, theDataBase64Binary);
        }
        {
            Instant theDataInstant;
            theDataInstant = this.getDataInstant();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataInstant", theDataInstant), currentHashCode, theDataInstant);
        }
        {
            org.hl7.fhir.String theDataString;
            theDataString = this.getDataString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataString", theDataString), currentHashCode, theDataString);
        }
        {
            Uri theDataUri;
            theDataUri = this.getDataUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataUri", theDataUri), currentHashCode, theDataUri);
        }
        {
            Date theDataDate;
            theDataDate = this.getDataDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataDate", theDataDate), currentHashCode, theDataDate);
        }
        {
            DateTime theDataDateTime;
            theDataDateTime = this.getDataDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataDateTime", theDataDateTime), currentHashCode, theDataDateTime);
        }
        {
            Code theDataCode;
            theDataCode = this.getDataCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataCode", theDataCode), currentHashCode, theDataCode);
        }
        {
            Oid theDataOid;
            theDataOid = this.getDataOid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataOid", theDataOid), currentHashCode, theDataOid);
        }
        {
            Uuid theDataUuid;
            theDataUuid = this.getDataUuid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataUuid", theDataUuid), currentHashCode, theDataUuid);
        }
        {
            Id theDataId;
            theDataId = this.getDataId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataId", theDataId), currentHashCode, theDataId);
        }
        {
            Attachment theDataAttachment;
            theDataAttachment = this.getDataAttachment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataAttachment", theDataAttachment), currentHashCode, theDataAttachment);
        }
        {
            Identifier theDataIdentifier;
            theDataIdentifier = this.getDataIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataIdentifier", theDataIdentifier), currentHashCode, theDataIdentifier);
        }
        {
            CodeableConcept theDataCodeableConcept;
            theDataCodeableConcept = this.getDataCodeableConcept();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataCodeableConcept", theDataCodeableConcept), currentHashCode, theDataCodeableConcept);
        }
        {
            Coding theDataCoding;
            theDataCoding = this.getDataCoding();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataCoding", theDataCoding), currentHashCode, theDataCoding);
        }
        {
            Quantity theDataQuantity;
            theDataQuantity = this.getDataQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataQuantity", theDataQuantity), currentHashCode, theDataQuantity);
        }
        {
            Range theDataRange;
            theDataRange = this.getDataRange();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataRange", theDataRange), currentHashCode, theDataRange);
        }
        {
            Period theDataPeriod;
            theDataPeriod = this.getDataPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataPeriod", theDataPeriod), currentHashCode, theDataPeriod);
        }
        {
            Ratio theDataRatio;
            theDataRatio = this.getDataRatio();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataRatio", theDataRatio), currentHashCode, theDataRatio);
        }
        {
            ResourceReference theDataResource;
            theDataResource = this.getDataResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataResource", theDataResource), currentHashCode, theDataResource);
        }
        {
            SampledData theDataSampledData;
            theDataSampledData = this.getDataSampledData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataSampledData", theDataSampledData), currentHashCode, theDataSampledData);
        }
        {
            HumanName theDataHumanName;
            theDataHumanName = this.getDataHumanName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataHumanName", theDataHumanName), currentHashCode, theDataHumanName);
        }
        {
            Address theDataAddress;
            theDataAddress = this.getDataAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataAddress", theDataAddress), currentHashCode, theDataAddress);
        }
        {
            Contact theDataContact;
            theDataContact = this.getDataContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataContact", theDataContact), currentHashCode, theDataContact);
        }
        {
            Schedule theDataSchedule;
            theDataSchedule = this.getDataSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataSchedule", theDataSchedule), currentHashCode, theDataSchedule);
        }
        {
            org.hl7.fhir.String theRemarks;
            theRemarks = this.getRemarks();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "remarks", theRemarks), currentHashCode, theRemarks);
        }
        {
            List<QuestionnaireGroup> theGroup;
            theGroup = (((this.group!= null)&&(!this.group.isEmpty()))?this.getGroup():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "group", theGroup), currentHashCode, theGroup);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
