//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have either a @value, an @id, or extensions
 * 
 * <p>Java class for OperationOutcome complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OperationOutcome">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Resource">
 *       &lt;sequence>
 *         &lt;element name="issue" type="{http://hl7.org/fhir}OperationOutcome.Issue" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OperationOutcome", propOrder = {
    "issue"
})
@Entity(name = "OperationOutcome")
@Table(name = "OPERATIONOUTCOME")
public class OperationOutcome
    extends Resource
    implements Equals, HashCode
{

    @XmlElement(required = true)
    protected List<OperationOutcomeIssue> issue;

    /**
     * Gets the value of the issue property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the issue property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIssue().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OperationOutcomeIssue }
     * 
     * 
     */
    @OneToMany(targetEntity = OperationOutcomeIssue.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ISSUE_OPERATIONOUTCOME_HJID")
    public List<OperationOutcomeIssue> getIssue() {
        if (issue == null) {
            issue = new ArrayList<OperationOutcomeIssue>();
        }
        return this.issue;
    }

    /**
     * 
     * 
     */
    public void setIssue(List<OperationOutcomeIssue> issue) {
        this.issue = issue;
    }

    public OperationOutcome withIssue(OperationOutcomeIssue... values) {
        if (values!= null) {
            for (OperationOutcomeIssue value: values) {
                getIssue().add(value);
            }
        }
        return this;
    }

    public OperationOutcome withIssue(Collection<OperationOutcomeIssue> values) {
        if (values!= null) {
            getIssue().addAll(values);
        }
        return this;
    }

    public OperationOutcome withIssue(List<OperationOutcomeIssue> issue) {
        setIssue(issue);
        return this;
    }

    @Override
    public OperationOutcome withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public OperationOutcome withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public OperationOutcome withContained(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContained().add(value);
            }
        }
        return this;
    }

    @Override
    public OperationOutcome withContained(Collection<ResourceInline> values) {
        if (values!= null) {
            getContained().addAll(values);
        }
        return this;
    }

    @Override
    public OperationOutcome withContained(List<ResourceInline> contained) {
        setContained(contained);
        return this;
    }

    @Override
    public OperationOutcome withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public OperationOutcome withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public OperationOutcome withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public OperationOutcome withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public OperationOutcome withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public OperationOutcome withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public OperationOutcome withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OperationOutcome)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final OperationOutcome that = ((OperationOutcome) object);
        {
            List<OperationOutcomeIssue> lhsIssue;
            lhsIssue = (((this.issue!= null)&&(!this.issue.isEmpty()))?this.getIssue():null);
            List<OperationOutcomeIssue> rhsIssue;
            rhsIssue = (((that.issue!= null)&&(!that.issue.isEmpty()))?that.getIssue():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "issue", lhsIssue), LocatorUtils.property(thatLocator, "issue", rhsIssue), lhsIssue, rhsIssue)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<OperationOutcomeIssue> theIssue;
            theIssue = (((this.issue!= null)&&(!this.issue.isEmpty()))?this.getIssue():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "issue", theIssue), currentHashCode, theIssue);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
