//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
 * 
 * <p>Java class for SecurityEvent.Participant complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SecurityEvent.Participant">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="role" type="{http://hl7.org/fhir}CodeableConcept" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="reference" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="userId" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="altId" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="name" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="requestor" type="{http://hl7.org/fhir}boolean"/>
 *         &lt;element name="media" type="{http://hl7.org/fhir}Coding" minOccurs="0"/>
 *         &lt;element name="network" type="{http://hl7.org/fhir}SecurityEvent.Network" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SecurityEvent.Participant", propOrder = {
    "role",
    "reference",
    "userId",
    "altId",
    "name",
    "requestor",
    "media",
    "network"
})
@Entity(name = "SecurityEventParticipant")
@Table(name = "SECURITYEVENTPARTICIPANT")
public class SecurityEventParticipant
    extends BackboneElement
    implements Equals, HashCode
{

    protected List<CodeableConcept> role;
    protected ResourceReference reference;
    protected org.hl7.fhir.String userId;
    protected org.hl7.fhir.String altId;
    protected org.hl7.fhir.String name;
    @XmlElement(required = true)
    protected Boolean requestor;
    protected Coding media;
    protected SecurityEventNetwork network;

    /**
     * Gets the value of the role property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the role property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRole().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeableConcept }
     * 
     * 
     */
    @OneToMany(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ROLE__SECURITYEVENTPARTICIPA_0")
    public List<CodeableConcept> getRole() {
        if (role == null) {
            role = new ArrayList<CodeableConcept>();
        }
        return this.role;
    }

    /**
     * 
     * 
     */
    public void setRole(List<CodeableConcept> role) {
        this.role = role;
    }

    /**
     * Gets the value of the reference property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REFERENCE_SECURITYEVENTPARTI_0")
    public ResourceReference getReference() {
        return reference;
    }

    /**
     * Sets the value of the reference property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setReference(ResourceReference value) {
        this.reference = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "USERID_SECURITYEVENTPARTICIP_0")
    public org.hl7.fhir.String getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setUserId(org.hl7.fhir.String value) {
        this.userId = value;
    }

    /**
     * Gets the value of the altId property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ALTID_SECURITYEVENTPARTICIPA_0")
    public org.hl7.fhir.String getAltId() {
        return altId;
    }

    /**
     * Sets the value of the altId property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setAltId(org.hl7.fhir.String value) {
        this.altId = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__SECURITYEVENTPARTICIPA_0")
    public org.hl7.fhir.String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setName(org.hl7.fhir.String value) {
        this.name = value;
    }

    /**
     * Gets the value of the requestor property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REQUESTOR_SECURITYEVENTPARTI_0")
    public Boolean getRequestor() {
        return requestor;
    }

    /**
     * Sets the value of the requestor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRequestor(Boolean value) {
        this.requestor = value;
    }

    /**
     * Gets the value of the media property.
     * 
     * @return
     *     possible object is
     *     {@link Coding }
     *     
     */
    @ManyToOne(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MEDIA_SECURITYEVENTPARTICIPA_0")
    public Coding getMedia() {
        return media;
    }

    /**
     * Sets the value of the media property.
     * 
     * @param value
     *     allowed object is
     *     {@link Coding }
     *     
     */
    public void setMedia(Coding value) {
        this.media = value;
    }

    /**
     * Gets the value of the network property.
     * 
     * @return
     *     possible object is
     *     {@link SecurityEventNetwork }
     *     
     */
    @ManyToOne(targetEntity = SecurityEventNetwork.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NETWORK_SECURITYEVENTPARTICI_0")
    public SecurityEventNetwork getNetwork() {
        return network;
    }

    /**
     * Sets the value of the network property.
     * 
     * @param value
     *     allowed object is
     *     {@link SecurityEventNetwork }
     *     
     */
    public void setNetwork(SecurityEventNetwork value) {
        this.network = value;
    }

    public SecurityEventParticipant withRole(CodeableConcept... values) {
        if (values!= null) {
            for (CodeableConcept value: values) {
                getRole().add(value);
            }
        }
        return this;
    }

    public SecurityEventParticipant withRole(Collection<CodeableConcept> values) {
        if (values!= null) {
            getRole().addAll(values);
        }
        return this;
    }

    public SecurityEventParticipant withRole(List<CodeableConcept> role) {
        setRole(role);
        return this;
    }

    public SecurityEventParticipant withReference(ResourceReference value) {
        setReference(value);
        return this;
    }

    public SecurityEventParticipant withUserId(org.hl7.fhir.String value) {
        setUserId(value);
        return this;
    }

    public SecurityEventParticipant withAltId(org.hl7.fhir.String value) {
        setAltId(value);
        return this;
    }

    public SecurityEventParticipant withName(org.hl7.fhir.String value) {
        setName(value);
        return this;
    }

    public SecurityEventParticipant withRequestor(Boolean value) {
        setRequestor(value);
        return this;
    }

    public SecurityEventParticipant withMedia(Coding value) {
        setMedia(value);
        return this;
    }

    public SecurityEventParticipant withNetwork(SecurityEventNetwork value) {
        setNetwork(value);
        return this;
    }

    @Override
    public SecurityEventParticipant withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public SecurityEventParticipant withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public SecurityEventParticipant withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public SecurityEventParticipant withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public SecurityEventParticipant withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public SecurityEventParticipant withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public SecurityEventParticipant withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SecurityEventParticipant)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SecurityEventParticipant that = ((SecurityEventParticipant) object);
        {
            List<CodeableConcept> lhsRole;
            lhsRole = (((this.role!= null)&&(!this.role.isEmpty()))?this.getRole():null);
            List<CodeableConcept> rhsRole;
            rhsRole = (((that.role!= null)&&(!that.role.isEmpty()))?that.getRole():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "role", lhsRole), LocatorUtils.property(thatLocator, "role", rhsRole), lhsRole, rhsRole)) {
                return false;
            }
        }
        {
            ResourceReference lhsReference;
            lhsReference = this.getReference();
            ResourceReference rhsReference;
            rhsReference = that.getReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reference", lhsReference), LocatorUtils.property(thatLocator, "reference", rhsReference), lhsReference, rhsReference)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsUserId;
            lhsUserId = this.getUserId();
            org.hl7.fhir.String rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsAltId;
            lhsAltId = this.getAltId();
            org.hl7.fhir.String rhsAltId;
            rhsAltId = that.getAltId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "altId", lhsAltId), LocatorUtils.property(thatLocator, "altId", rhsAltId), lhsAltId, rhsAltId)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            Boolean lhsRequestor;
            lhsRequestor = this.getRequestor();
            Boolean rhsRequestor;
            rhsRequestor = that.getRequestor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestor", lhsRequestor), LocatorUtils.property(thatLocator, "requestor", rhsRequestor), lhsRequestor, rhsRequestor)) {
                return false;
            }
        }
        {
            Coding lhsMedia;
            lhsMedia = this.getMedia();
            Coding rhsMedia;
            rhsMedia = that.getMedia();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "media", lhsMedia), LocatorUtils.property(thatLocator, "media", rhsMedia), lhsMedia, rhsMedia)) {
                return false;
            }
        }
        {
            SecurityEventNetwork lhsNetwork;
            lhsNetwork = this.getNetwork();
            SecurityEventNetwork rhsNetwork;
            rhsNetwork = that.getNetwork();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "network", lhsNetwork), LocatorUtils.property(thatLocator, "network", rhsNetwork), lhsNetwork, rhsNetwork)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<CodeableConcept> theRole;
            theRole = (((this.role!= null)&&(!this.role.isEmpty()))?this.getRole():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "role", theRole), currentHashCode, theRole);
        }
        {
            ResourceReference theReference;
            theReference = this.getReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reference", theReference), currentHashCode, theReference);
        }
        {
            org.hl7.fhir.String theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            org.hl7.fhir.String theAltId;
            theAltId = this.getAltId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "altId", theAltId), currentHashCode, theAltId);
        }
        {
            org.hl7.fhir.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            Boolean theRequestor;
            theRequestor = this.getRequestor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestor", theRequestor), currentHashCode, theRequestor);
        }
        {
            Coding theMedia;
            theMedia = this.getMedia();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "media", theMedia), currentHashCode, theMedia);
        }
        {
            SecurityEventNetwork theNetwork;
            theNetwork = this.getNetwork();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "network", theNetwork), currentHashCode, theNetwork);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
