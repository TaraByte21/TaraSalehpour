//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A Resource Profile - a statement of use of one or more FHIR Resources.  It may include constraints on Resources and Data Types, Terminology Binding Statements and Extension Definitions.
 * 
 * <p>Java class for Profile.Slicing complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Profile.Slicing">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="discriminator" type="{http://hl7.org/fhir}id"/>
 *         &lt;element name="ordered" type="{http://hl7.org/fhir}boolean"/>
 *         &lt;element name="rules" type="{http://hl7.org/fhir}SlicingRules"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.Slicing", propOrder = {
    "discriminator",
    "ordered",
    "rules"
})
@Entity(name = "ProfileSlicing")
@Table(name = "PROFILESLICING")
public class ProfileSlicing
    extends BackboneElement
    implements Equals, HashCode
{

    @XmlElement(required = true)
    protected Id discriminator;
    @XmlElement(required = true)
    protected Boolean ordered;
    @XmlElement(required = true)
    protected SlicingRules rules;

    /**
     * Gets the value of the discriminator property.
     * 
     * @return
     *     possible object is
     *     {@link Id }
     *     
     */
    @ManyToOne(targetEntity = Id.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DISCRIMINATOR_PROFILESLICING_0")
    public Id getDiscriminator() {
        return discriminator;
    }

    /**
     * Sets the value of the discriminator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Id }
     *     
     */
    public void setDiscriminator(Id value) {
        this.discriminator = value;
    }

    /**
     * Gets the value of the ordered property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORDERED_PROFILESLICING_HJID")
    public Boolean getOrdered() {
        return ordered;
    }

    /**
     * Sets the value of the ordered property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOrdered(Boolean value) {
        this.ordered = value;
    }

    /**
     * Gets the value of the rules property.
     * 
     * @return
     *     possible object is
     *     {@link SlicingRules }
     *     
     */
    @ManyToOne(targetEntity = SlicingRules.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RULES_PROFILESLICING_HJID")
    public SlicingRules getRules() {
        return rules;
    }

    /**
     * Sets the value of the rules property.
     * 
     * @param value
     *     allowed object is
     *     {@link SlicingRules }
     *     
     */
    public void setRules(SlicingRules value) {
        this.rules = value;
    }

    public ProfileSlicing withDiscriminator(Id value) {
        setDiscriminator(value);
        return this;
    }

    public ProfileSlicing withOrdered(Boolean value) {
        setOrdered(value);
        return this;
    }

    public ProfileSlicing withRules(SlicingRules value) {
        setRules(value);
        return this;
    }

    @Override
    public ProfileSlicing withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileSlicing withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileSlicing withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public ProfileSlicing withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileSlicing withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileSlicing withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public ProfileSlicing withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProfileSlicing)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ProfileSlicing that = ((ProfileSlicing) object);
        {
            Id lhsDiscriminator;
            lhsDiscriminator = this.getDiscriminator();
            Id rhsDiscriminator;
            rhsDiscriminator = that.getDiscriminator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "discriminator", lhsDiscriminator), LocatorUtils.property(thatLocator, "discriminator", rhsDiscriminator), lhsDiscriminator, rhsDiscriminator)) {
                return false;
            }
        }
        {
            Boolean lhsOrdered;
            lhsOrdered = this.getOrdered();
            Boolean rhsOrdered;
            rhsOrdered = that.getOrdered();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ordered", lhsOrdered), LocatorUtils.property(thatLocator, "ordered", rhsOrdered), lhsOrdered, rhsOrdered)) {
                return false;
            }
        }
        {
            SlicingRules lhsRules;
            lhsRules = this.getRules();
            SlicingRules rhsRules;
            rhsRules = that.getRules();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rules", lhsRules), LocatorUtils.property(thatLocator, "rules", rhsRules), lhsRules, rhsRules)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Id theDiscriminator;
            theDiscriminator = this.getDiscriminator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "discriminator", theDiscriminator), currentHashCode, theDiscriminator);
        }
        {
            Boolean theOrdered;
            theOrdered = this.getOrdered();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ordered", theOrdered), currentHashCode, theOrdered);
        }
        {
            SlicingRules theRules;
            theRules = this.getRules();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rules", theRules), currentHashCode, theRules);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
