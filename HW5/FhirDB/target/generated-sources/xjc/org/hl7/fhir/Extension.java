//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.Collection;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
 * 
 * <p>Java class for Extension complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Extension">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Element">
 *       &lt;sequence>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="valueBoolean" type="{http://hl7.org/fhir}boolean"/>
 *           &lt;element name="valueInteger" type="{http://hl7.org/fhir}integer"/>
 *           &lt;element name="valueDecimal" type="{http://hl7.org/fhir}decimal"/>
 *           &lt;element name="valueBase64Binary" type="{http://hl7.org/fhir}base64Binary"/>
 *           &lt;element name="valueInstant" type="{http://hl7.org/fhir}instant"/>
 *           &lt;element name="valueString" type="{http://hl7.org/fhir}string"/>
 *           &lt;element name="valueUri" type="{http://hl7.org/fhir}uri"/>
 *           &lt;element name="valueDate" type="{http://hl7.org/fhir}date"/>
 *           &lt;element name="valueDateTime" type="{http://hl7.org/fhir}dateTime"/>
 *           &lt;element name="valueCode" type="{http://hl7.org/fhir}code"/>
 *           &lt;element name="valueAttachment" type="{http://hl7.org/fhir}Attachment"/>
 *           &lt;element name="valueIdentifier" type="{http://hl7.org/fhir}Identifier"/>
 *           &lt;element name="valueCodeableConcept" type="{http://hl7.org/fhir}CodeableConcept"/>
 *           &lt;element name="valueCoding" type="{http://hl7.org/fhir}Coding"/>
 *           &lt;element name="valueQuantity" type="{http://hl7.org/fhir}Quantity"/>
 *           &lt;element name="valueRange" type="{http://hl7.org/fhir}Range"/>
 *           &lt;element name="valuePeriod" type="{http://hl7.org/fhir}Period"/>
 *           &lt;element name="valueRatio" type="{http://hl7.org/fhir}Ratio"/>
 *           &lt;element name="valueResource" type="{http://hl7.org/fhir}ResourceReference"/>
 *           &lt;element name="valueSampledData" type="{http://hl7.org/fhir}SampledData"/>
 *           &lt;element name="valueHumanName" type="{http://hl7.org/fhir}HumanName"/>
 *           &lt;element name="valueAddress" type="{http://hl7.org/fhir}Address"/>
 *           &lt;element name="valueContact" type="{http://hl7.org/fhir}Contact"/>
 *           &lt;element name="valueSchedule" type="{http://hl7.org/fhir}Schedule"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="url" use="required" type="{http://hl7.org/fhir}uri-primitive" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Extension", propOrder = {
    "valueBoolean",
    "valueInteger",
    "valueDecimal",
    "valueBase64Binary",
    "valueInstant",
    "valueString",
    "valueUri",
    "valueDate",
    "valueDateTime",
    "valueCode",
    "valueAttachment",
    "valueIdentifier",
    "valueCodeableConcept",
    "valueCoding",
    "valueQuantity",
    "valueRange",
    "valuePeriod",
    "valueRatio",
    "valueResource",
    "valueSampledData",
    "valueHumanName",
    "valueAddress",
    "valueContact",
    "valueSchedule"
})
@Entity(name = "Extension")
@Table(name = "EXTENSION")
public class Extension
    extends Element
    implements Equals, HashCode
{

    protected Boolean valueBoolean;
    protected Integer valueInteger;
    protected Decimal valueDecimal;
    protected Base64Binary valueBase64Binary;
    protected Instant valueInstant;
    protected org.hl7.fhir.String valueString;
    protected Uri valueUri;
    protected Date valueDate;
    protected DateTime valueDateTime;
    protected Code valueCode;
    protected Attachment valueAttachment;
    protected Identifier valueIdentifier;
    protected CodeableConcept valueCodeableConcept;
    protected Coding valueCoding;
    protected Quantity valueQuantity;
    protected Range valueRange;
    protected Period valuePeriod;
    protected Ratio valueRatio;
    protected ResourceReference valueResource;
    protected SampledData valueSampledData;
    protected HumanName valueHumanName;
    protected Address valueAddress;
    protected Contact valueContact;
    protected Schedule valueSchedule;
    @XmlAttribute(name = "url", required = true)
    protected java.lang.String url;

    /**
     * Gets the value of the valueBoolean property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEBOOLEAN_EXTENSION_HJID")
    public Boolean getValueBoolean() {
        return valueBoolean;
    }

    /**
     * Sets the value of the valueBoolean property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setValueBoolean(Boolean value) {
        this.valueBoolean = value;
    }

    /**
     * Gets the value of the valueInteger property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEINTEGER_EXTENSION_HJID")
    public Integer getValueInteger() {
        return valueInteger;
    }

    /**
     * Sets the value of the valueInteger property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setValueInteger(Integer value) {
        this.valueInteger = value;
    }

    /**
     * Gets the value of the valueDecimal property.
     * 
     * @return
     *     possible object is
     *     {@link Decimal }
     *     
     */
    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEDECIMAL_EXTENSION_HJID")
    public Decimal getValueDecimal() {
        return valueDecimal;
    }

    /**
     * Sets the value of the valueDecimal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Decimal }
     *     
     */
    public void setValueDecimal(Decimal value) {
        this.valueDecimal = value;
    }

    /**
     * Gets the value of the valueBase64Binary property.
     * 
     * @return
     *     possible object is
     *     {@link Base64Binary }
     *     
     */
    @ManyToOne(targetEntity = Base64Binary.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEBASE64BINARY_EXTENSION__0")
    public Base64Binary getValueBase64Binary() {
        return valueBase64Binary;
    }

    /**
     * Sets the value of the valueBase64Binary property.
     * 
     * @param value
     *     allowed object is
     *     {@link Base64Binary }
     *     
     */
    public void setValueBase64Binary(Base64Binary value) {
        this.valueBase64Binary = value;
    }

    /**
     * Gets the value of the valueInstant property.
     * 
     * @return
     *     possible object is
     *     {@link Instant }
     *     
     */
    @ManyToOne(targetEntity = Instant.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEINSTANT_EXTENSION_HJID")
    public Instant getValueInstant() {
        return valueInstant;
    }

    /**
     * Sets the value of the valueInstant property.
     * 
     * @param value
     *     allowed object is
     *     {@link Instant }
     *     
     */
    public void setValueInstant(Instant value) {
        this.valueInstant = value;
    }

    /**
     * Gets the value of the valueString property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUESTRING_EXTENSION_HJID")
    public org.hl7.fhir.String getValueString() {
        return valueString;
    }

    /**
     * Sets the value of the valueString property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setValueString(org.hl7.fhir.String value) {
        this.valueString = value;
    }

    /**
     * Gets the value of the valueUri property.
     * 
     * @return
     *     possible object is
     *     {@link Uri }
     *     
     */
    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEURI_EXTENSION_HJID")
    public Uri getValueUri() {
        return valueUri;
    }

    /**
     * Sets the value of the valueUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link Uri }
     *     
     */
    public void setValueUri(Uri value) {
        this.valueUri = value;
    }

    /**
     * Gets the value of the valueDate property.
     * 
     * @return
     *     possible object is
     *     {@link Date }
     *     
     */
    @ManyToOne(targetEntity = Date.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEDATE_EXTENSION_HJID")
    public Date getValueDate() {
        return valueDate;
    }

    /**
     * Sets the value of the valueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Date }
     *     
     */
    public void setValueDate(Date value) {
        this.valueDate = value;
    }

    /**
     * Gets the value of the valueDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEDATETIME_EXTENSION_HJID")
    public DateTime getValueDateTime() {
        return valueDateTime;
    }

    /**
     * Sets the value of the valueDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setValueDateTime(DateTime value) {
        this.valueDateTime = value;
    }

    /**
     * Gets the value of the valueCode property.
     * 
     * @return
     *     possible object is
     *     {@link Code }
     *     
     */
    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUECODE_EXTENSION_HJID")
    public Code getValueCode() {
        return valueCode;
    }

    /**
     * Sets the value of the valueCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link Code }
     *     
     */
    public void setValueCode(Code value) {
        this.valueCode = value;
    }

    /**
     * Gets the value of the valueAttachment property.
     * 
     * @return
     *     possible object is
     *     {@link Attachment }
     *     
     */
    @ManyToOne(targetEntity = Attachment.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEATTACHMENT_EXTENSION_HJ_0")
    public Attachment getValueAttachment() {
        return valueAttachment;
    }

    /**
     * Sets the value of the valueAttachment property.
     * 
     * @param value
     *     allowed object is
     *     {@link Attachment }
     *     
     */
    public void setValueAttachment(Attachment value) {
        this.valueAttachment = value;
    }

    /**
     * Gets the value of the valueIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    @ManyToOne(targetEntity = Identifier.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEIDENTIFIER_EXTENSION_HJ_0")
    public Identifier getValueIdentifier() {
        return valueIdentifier;
    }

    /**
     * Sets the value of the valueIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setValueIdentifier(Identifier value) {
        this.valueIdentifier = value;
    }

    /**
     * Gets the value of the valueCodeableConcept property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUECODEABLECONCEPT_EXTENSI_0")
    public CodeableConcept getValueCodeableConcept() {
        return valueCodeableConcept;
    }

    /**
     * Sets the value of the valueCodeableConcept property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setValueCodeableConcept(CodeableConcept value) {
        this.valueCodeableConcept = value;
    }

    /**
     * Gets the value of the valueCoding property.
     * 
     * @return
     *     possible object is
     *     {@link Coding }
     *     
     */
    @ManyToOne(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUECODING_EXTENSION_HJID")
    public Coding getValueCoding() {
        return valueCoding;
    }

    /**
     * Sets the value of the valueCoding property.
     * 
     * @param value
     *     allowed object is
     *     {@link Coding }
     *     
     */
    public void setValueCoding(Coding value) {
        this.valueCoding = value;
    }

    /**
     * Gets the value of the valueQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link Quantity }
     *     
     */
    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEQUANTITY_EXTENSION_HJID")
    public Quantity getValueQuantity() {
        return valueQuantity;
    }

    /**
     * Sets the value of the valueQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Quantity }
     *     
     */
    public void setValueQuantity(Quantity value) {
        this.valueQuantity = value;
    }

    /**
     * Gets the value of the valueRange property.
     * 
     * @return
     *     possible object is
     *     {@link Range }
     *     
     */
    @ManyToOne(targetEntity = Range.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUERANGE_EXTENSION_HJID")
    public Range getValueRange() {
        return valueRange;
    }

    /**
     * Sets the value of the valueRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link Range }
     *     
     */
    public void setValueRange(Range value) {
        this.valueRange = value;
    }

    /**
     * Gets the value of the valuePeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEPERIOD_EXTENSION_HJID")
    public Period getValuePeriod() {
        return valuePeriod;
    }

    /**
     * Sets the value of the valuePeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setValuePeriod(Period value) {
        this.valuePeriod = value;
    }

    /**
     * Gets the value of the valueRatio property.
     * 
     * @return
     *     possible object is
     *     {@link Ratio }
     *     
     */
    @ManyToOne(targetEntity = Ratio.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUERATIO_EXTENSION_HJID")
    public Ratio getValueRatio() {
        return valueRatio;
    }

    /**
     * Sets the value of the valueRatio property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ratio }
     *     
     */
    public void setValueRatio(Ratio value) {
        this.valueRatio = value;
    }

    /**
     * Gets the value of the valueResource property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUERESOURCE_EXTENSION_HJID")
    public ResourceReference getValueResource() {
        return valueResource;
    }

    /**
     * Sets the value of the valueResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setValueResource(ResourceReference value) {
        this.valueResource = value;
    }

    /**
     * Gets the value of the valueSampledData property.
     * 
     * @return
     *     possible object is
     *     {@link SampledData }
     *     
     */
    @ManyToOne(targetEntity = SampledData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUESAMPLEDDATA_EXTENSION_H_0")
    public SampledData getValueSampledData() {
        return valueSampledData;
    }

    /**
     * Sets the value of the valueSampledData property.
     * 
     * @param value
     *     allowed object is
     *     {@link SampledData }
     *     
     */
    public void setValueSampledData(SampledData value) {
        this.valueSampledData = value;
    }

    /**
     * Gets the value of the valueHumanName property.
     * 
     * @return
     *     possible object is
     *     {@link HumanName }
     *     
     */
    @ManyToOne(targetEntity = HumanName.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEHUMANNAME_EXTENSION_HJID")
    public HumanName getValueHumanName() {
        return valueHumanName;
    }

    /**
     * Sets the value of the valueHumanName property.
     * 
     * @param value
     *     allowed object is
     *     {@link HumanName }
     *     
     */
    public void setValueHumanName(HumanName value) {
        this.valueHumanName = value;
    }

    /**
     * Gets the value of the valueAddress property.
     * 
     * @return
     *     possible object is
     *     {@link Address }
     *     
     */
    @ManyToOne(targetEntity = Address.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEADDRESS_EXTENSION_HJID")
    public Address getValueAddress() {
        return valueAddress;
    }

    /**
     * Sets the value of the valueAddress property.
     * 
     * @param value
     *     allowed object is
     *     {@link Address }
     *     
     */
    public void setValueAddress(Address value) {
        this.valueAddress = value;
    }

    /**
     * Gets the value of the valueContact property.
     * 
     * @return
     *     possible object is
     *     {@link Contact }
     *     
     */
    @ManyToOne(targetEntity = Contact.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUECONTACT_EXTENSION_HJID")
    public Contact getValueContact() {
        return valueContact;
    }

    /**
     * Sets the value of the valueContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link Contact }
     *     
     */
    public void setValueContact(Contact value) {
        this.valueContact = value;
    }

    /**
     * Gets the value of the valueSchedule property.
     * 
     * @return
     *     possible object is
     *     {@link Schedule }
     *     
     */
    @ManyToOne(targetEntity = Schedule.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUESCHEDULE_EXTENSION_HJID")
    public Schedule getValueSchedule() {
        return valueSchedule;
    }

    /**
     * Sets the value of the valueSchedule property.
     * 
     * @param value
     *     allowed object is
     *     {@link Schedule }
     *     
     */
    public void setValueSchedule(Schedule value) {
        this.valueSchedule = value;
    }

    /**
     * Gets the value of the url property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    @Basic
    @Column(name = "URL")
    public java.lang.String getUrl() {
        return url;
    }

    /**
     * Sets the value of the url property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setUrl(java.lang.String value) {
        this.url = value;
    }

    public Extension withValueBoolean(Boolean value) {
        setValueBoolean(value);
        return this;
    }

    public Extension withValueInteger(Integer value) {
        setValueInteger(value);
        return this;
    }

    public Extension withValueDecimal(Decimal value) {
        setValueDecimal(value);
        return this;
    }

    public Extension withValueBase64Binary(Base64Binary value) {
        setValueBase64Binary(value);
        return this;
    }

    public Extension withValueInstant(Instant value) {
        setValueInstant(value);
        return this;
    }

    public Extension withValueString(org.hl7.fhir.String value) {
        setValueString(value);
        return this;
    }

    public Extension withValueUri(Uri value) {
        setValueUri(value);
        return this;
    }

    public Extension withValueDate(Date value) {
        setValueDate(value);
        return this;
    }

    public Extension withValueDateTime(DateTime value) {
        setValueDateTime(value);
        return this;
    }

    public Extension withValueCode(Code value) {
        setValueCode(value);
        return this;
    }

    public Extension withValueAttachment(Attachment value) {
        setValueAttachment(value);
        return this;
    }

    public Extension withValueIdentifier(Identifier value) {
        setValueIdentifier(value);
        return this;
    }

    public Extension withValueCodeableConcept(CodeableConcept value) {
        setValueCodeableConcept(value);
        return this;
    }

    public Extension withValueCoding(Coding value) {
        setValueCoding(value);
        return this;
    }

    public Extension withValueQuantity(Quantity value) {
        setValueQuantity(value);
        return this;
    }

    public Extension withValueRange(Range value) {
        setValueRange(value);
        return this;
    }

    public Extension withValuePeriod(Period value) {
        setValuePeriod(value);
        return this;
    }

    public Extension withValueRatio(Ratio value) {
        setValueRatio(value);
        return this;
    }

    public Extension withValueResource(ResourceReference value) {
        setValueResource(value);
        return this;
    }

    public Extension withValueSampledData(SampledData value) {
        setValueSampledData(value);
        return this;
    }

    public Extension withValueHumanName(HumanName value) {
        setValueHumanName(value);
        return this;
    }

    public Extension withValueAddress(Address value) {
        setValueAddress(value);
        return this;
    }

    public Extension withValueContact(Contact value) {
        setValueContact(value);
        return this;
    }

    public Extension withValueSchedule(Schedule value) {
        setValueSchedule(value);
        return this;
    }

    public Extension withUrl(java.lang.String value) {
        setUrl(value);
        return this;
    }

    @Override
    public Extension withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public Extension withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public Extension withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public Extension withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Extension)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Extension that = ((Extension) object);
        {
            Boolean lhsValueBoolean;
            lhsValueBoolean = this.getValueBoolean();
            Boolean rhsValueBoolean;
            rhsValueBoolean = that.getValueBoolean();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueBoolean", lhsValueBoolean), LocatorUtils.property(thatLocator, "valueBoolean", rhsValueBoolean), lhsValueBoolean, rhsValueBoolean)) {
                return false;
            }
        }
        {
            Integer lhsValueInteger;
            lhsValueInteger = this.getValueInteger();
            Integer rhsValueInteger;
            rhsValueInteger = that.getValueInteger();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueInteger", lhsValueInteger), LocatorUtils.property(thatLocator, "valueInteger", rhsValueInteger), lhsValueInteger, rhsValueInteger)) {
                return false;
            }
        }
        {
            Decimal lhsValueDecimal;
            lhsValueDecimal = this.getValueDecimal();
            Decimal rhsValueDecimal;
            rhsValueDecimal = that.getValueDecimal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueDecimal", lhsValueDecimal), LocatorUtils.property(thatLocator, "valueDecimal", rhsValueDecimal), lhsValueDecimal, rhsValueDecimal)) {
                return false;
            }
        }
        {
            Base64Binary lhsValueBase64Binary;
            lhsValueBase64Binary = this.getValueBase64Binary();
            Base64Binary rhsValueBase64Binary;
            rhsValueBase64Binary = that.getValueBase64Binary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueBase64Binary", lhsValueBase64Binary), LocatorUtils.property(thatLocator, "valueBase64Binary", rhsValueBase64Binary), lhsValueBase64Binary, rhsValueBase64Binary)) {
                return false;
            }
        }
        {
            Instant lhsValueInstant;
            lhsValueInstant = this.getValueInstant();
            Instant rhsValueInstant;
            rhsValueInstant = that.getValueInstant();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueInstant", lhsValueInstant), LocatorUtils.property(thatLocator, "valueInstant", rhsValueInstant), lhsValueInstant, rhsValueInstant)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsValueString;
            lhsValueString = this.getValueString();
            org.hl7.fhir.String rhsValueString;
            rhsValueString = that.getValueString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueString", lhsValueString), LocatorUtils.property(thatLocator, "valueString", rhsValueString), lhsValueString, rhsValueString)) {
                return false;
            }
        }
        {
            Uri lhsValueUri;
            lhsValueUri = this.getValueUri();
            Uri rhsValueUri;
            rhsValueUri = that.getValueUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueUri", lhsValueUri), LocatorUtils.property(thatLocator, "valueUri", rhsValueUri), lhsValueUri, rhsValueUri)) {
                return false;
            }
        }
        {
            Date lhsValueDate;
            lhsValueDate = this.getValueDate();
            Date rhsValueDate;
            rhsValueDate = that.getValueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueDate", lhsValueDate), LocatorUtils.property(thatLocator, "valueDate", rhsValueDate), lhsValueDate, rhsValueDate)) {
                return false;
            }
        }
        {
            DateTime lhsValueDateTime;
            lhsValueDateTime = this.getValueDateTime();
            DateTime rhsValueDateTime;
            rhsValueDateTime = that.getValueDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueDateTime", lhsValueDateTime), LocatorUtils.property(thatLocator, "valueDateTime", rhsValueDateTime), lhsValueDateTime, rhsValueDateTime)) {
                return false;
            }
        }
        {
            Code lhsValueCode;
            lhsValueCode = this.getValueCode();
            Code rhsValueCode;
            rhsValueCode = that.getValueCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueCode", lhsValueCode), LocatorUtils.property(thatLocator, "valueCode", rhsValueCode), lhsValueCode, rhsValueCode)) {
                return false;
            }
        }
        {
            Attachment lhsValueAttachment;
            lhsValueAttachment = this.getValueAttachment();
            Attachment rhsValueAttachment;
            rhsValueAttachment = that.getValueAttachment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueAttachment", lhsValueAttachment), LocatorUtils.property(thatLocator, "valueAttachment", rhsValueAttachment), lhsValueAttachment, rhsValueAttachment)) {
                return false;
            }
        }
        {
            Identifier lhsValueIdentifier;
            lhsValueIdentifier = this.getValueIdentifier();
            Identifier rhsValueIdentifier;
            rhsValueIdentifier = that.getValueIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueIdentifier", lhsValueIdentifier), LocatorUtils.property(thatLocator, "valueIdentifier", rhsValueIdentifier), lhsValueIdentifier, rhsValueIdentifier)) {
                return false;
            }
        }
        {
            CodeableConcept lhsValueCodeableConcept;
            lhsValueCodeableConcept = this.getValueCodeableConcept();
            CodeableConcept rhsValueCodeableConcept;
            rhsValueCodeableConcept = that.getValueCodeableConcept();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueCodeableConcept", lhsValueCodeableConcept), LocatorUtils.property(thatLocator, "valueCodeableConcept", rhsValueCodeableConcept), lhsValueCodeableConcept, rhsValueCodeableConcept)) {
                return false;
            }
        }
        {
            Coding lhsValueCoding;
            lhsValueCoding = this.getValueCoding();
            Coding rhsValueCoding;
            rhsValueCoding = that.getValueCoding();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueCoding", lhsValueCoding), LocatorUtils.property(thatLocator, "valueCoding", rhsValueCoding), lhsValueCoding, rhsValueCoding)) {
                return false;
            }
        }
        {
            Quantity lhsValueQuantity;
            lhsValueQuantity = this.getValueQuantity();
            Quantity rhsValueQuantity;
            rhsValueQuantity = that.getValueQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueQuantity", lhsValueQuantity), LocatorUtils.property(thatLocator, "valueQuantity", rhsValueQuantity), lhsValueQuantity, rhsValueQuantity)) {
                return false;
            }
        }
        {
            Range lhsValueRange;
            lhsValueRange = this.getValueRange();
            Range rhsValueRange;
            rhsValueRange = that.getValueRange();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueRange", lhsValueRange), LocatorUtils.property(thatLocator, "valueRange", rhsValueRange), lhsValueRange, rhsValueRange)) {
                return false;
            }
        }
        {
            Period lhsValuePeriod;
            lhsValuePeriod = this.getValuePeriod();
            Period rhsValuePeriod;
            rhsValuePeriod = that.getValuePeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valuePeriod", lhsValuePeriod), LocatorUtils.property(thatLocator, "valuePeriod", rhsValuePeriod), lhsValuePeriod, rhsValuePeriod)) {
                return false;
            }
        }
        {
            Ratio lhsValueRatio;
            lhsValueRatio = this.getValueRatio();
            Ratio rhsValueRatio;
            rhsValueRatio = that.getValueRatio();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueRatio", lhsValueRatio), LocatorUtils.property(thatLocator, "valueRatio", rhsValueRatio), lhsValueRatio, rhsValueRatio)) {
                return false;
            }
        }
        {
            ResourceReference lhsValueResource;
            lhsValueResource = this.getValueResource();
            ResourceReference rhsValueResource;
            rhsValueResource = that.getValueResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueResource", lhsValueResource), LocatorUtils.property(thatLocator, "valueResource", rhsValueResource), lhsValueResource, rhsValueResource)) {
                return false;
            }
        }
        {
            SampledData lhsValueSampledData;
            lhsValueSampledData = this.getValueSampledData();
            SampledData rhsValueSampledData;
            rhsValueSampledData = that.getValueSampledData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueSampledData", lhsValueSampledData), LocatorUtils.property(thatLocator, "valueSampledData", rhsValueSampledData), lhsValueSampledData, rhsValueSampledData)) {
                return false;
            }
        }
        {
            HumanName lhsValueHumanName;
            lhsValueHumanName = this.getValueHumanName();
            HumanName rhsValueHumanName;
            rhsValueHumanName = that.getValueHumanName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueHumanName", lhsValueHumanName), LocatorUtils.property(thatLocator, "valueHumanName", rhsValueHumanName), lhsValueHumanName, rhsValueHumanName)) {
                return false;
            }
        }
        {
            Address lhsValueAddress;
            lhsValueAddress = this.getValueAddress();
            Address rhsValueAddress;
            rhsValueAddress = that.getValueAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueAddress", lhsValueAddress), LocatorUtils.property(thatLocator, "valueAddress", rhsValueAddress), lhsValueAddress, rhsValueAddress)) {
                return false;
            }
        }
        {
            Contact lhsValueContact;
            lhsValueContact = this.getValueContact();
            Contact rhsValueContact;
            rhsValueContact = that.getValueContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueContact", lhsValueContact), LocatorUtils.property(thatLocator, "valueContact", rhsValueContact), lhsValueContact, rhsValueContact)) {
                return false;
            }
        }
        {
            Schedule lhsValueSchedule;
            lhsValueSchedule = this.getValueSchedule();
            Schedule rhsValueSchedule;
            rhsValueSchedule = that.getValueSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueSchedule", lhsValueSchedule), LocatorUtils.property(thatLocator, "valueSchedule", rhsValueSchedule), lhsValueSchedule, rhsValueSchedule)) {
                return false;
            }
        }
        {
            java.lang.String lhsUrl;
            lhsUrl = this.getUrl();
            java.lang.String rhsUrl;
            rhsUrl = that.getUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsUrl), LocatorUtils.property(thatLocator, "url", rhsUrl), lhsUrl, rhsUrl)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Boolean theValueBoolean;
            theValueBoolean = this.getValueBoolean();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueBoolean", theValueBoolean), currentHashCode, theValueBoolean);
        }
        {
            Integer theValueInteger;
            theValueInteger = this.getValueInteger();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueInteger", theValueInteger), currentHashCode, theValueInteger);
        }
        {
            Decimal theValueDecimal;
            theValueDecimal = this.getValueDecimal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueDecimal", theValueDecimal), currentHashCode, theValueDecimal);
        }
        {
            Base64Binary theValueBase64Binary;
            theValueBase64Binary = this.getValueBase64Binary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueBase64Binary", theValueBase64Binary), currentHashCode, theValueBase64Binary);
        }
        {
            Instant theValueInstant;
            theValueInstant = this.getValueInstant();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueInstant", theValueInstant), currentHashCode, theValueInstant);
        }
        {
            org.hl7.fhir.String theValueString;
            theValueString = this.getValueString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueString", theValueString), currentHashCode, theValueString);
        }
        {
            Uri theValueUri;
            theValueUri = this.getValueUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueUri", theValueUri), currentHashCode, theValueUri);
        }
        {
            Date theValueDate;
            theValueDate = this.getValueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueDate", theValueDate), currentHashCode, theValueDate);
        }
        {
            DateTime theValueDateTime;
            theValueDateTime = this.getValueDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueDateTime", theValueDateTime), currentHashCode, theValueDateTime);
        }
        {
            Code theValueCode;
            theValueCode = this.getValueCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueCode", theValueCode), currentHashCode, theValueCode);
        }
        {
            Attachment theValueAttachment;
            theValueAttachment = this.getValueAttachment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueAttachment", theValueAttachment), currentHashCode, theValueAttachment);
        }
        {
            Identifier theValueIdentifier;
            theValueIdentifier = this.getValueIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueIdentifier", theValueIdentifier), currentHashCode, theValueIdentifier);
        }
        {
            CodeableConcept theValueCodeableConcept;
            theValueCodeableConcept = this.getValueCodeableConcept();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueCodeableConcept", theValueCodeableConcept), currentHashCode, theValueCodeableConcept);
        }
        {
            Coding theValueCoding;
            theValueCoding = this.getValueCoding();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueCoding", theValueCoding), currentHashCode, theValueCoding);
        }
        {
            Quantity theValueQuantity;
            theValueQuantity = this.getValueQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueQuantity", theValueQuantity), currentHashCode, theValueQuantity);
        }
        {
            Range theValueRange;
            theValueRange = this.getValueRange();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueRange", theValueRange), currentHashCode, theValueRange);
        }
        {
            Period theValuePeriod;
            theValuePeriod = this.getValuePeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valuePeriod", theValuePeriod), currentHashCode, theValuePeriod);
        }
        {
            Ratio theValueRatio;
            theValueRatio = this.getValueRatio();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueRatio", theValueRatio), currentHashCode, theValueRatio);
        }
        {
            ResourceReference theValueResource;
            theValueResource = this.getValueResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueResource", theValueResource), currentHashCode, theValueResource);
        }
        {
            SampledData theValueSampledData;
            theValueSampledData = this.getValueSampledData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueSampledData", theValueSampledData), currentHashCode, theValueSampledData);
        }
        {
            HumanName theValueHumanName;
            theValueHumanName = this.getValueHumanName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueHumanName", theValueHumanName), currentHashCode, theValueHumanName);
        }
        {
            Address theValueAddress;
            theValueAddress = this.getValueAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueAddress", theValueAddress), currentHashCode, theValueAddress);
        }
        {
            Contact theValueContact;
            theValueContact = this.getValueContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueContact", theValueContact), currentHashCode, theValueContact);
        }
        {
            Schedule theValueSchedule;
            theValueSchedule = this.getValueSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueSchedule", theValueSchedule), currentHashCode, theValueSchedule);
        }
        {
            java.lang.String theUrl;
            theUrl = this.getUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theUrl), currentHashCode, theUrl);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
