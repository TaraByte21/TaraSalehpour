//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Manifest of a set of images produced in study. The set of images may include every image in the study, or it may be an incomplete sample, such as a list of key images.
 * 
 * <p>Java class for ImagingStudy.Series complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ImagingStudy.Series">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="number" type="{http://hl7.org/fhir}integer" minOccurs="0"/>
 *         &lt;element name="modality" type="{http://hl7.org/fhir}Modality"/>
 *         &lt;element name="uid" type="{http://hl7.org/fhir}oid"/>
 *         &lt;element name="description" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="numberOfInstances" type="{http://hl7.org/fhir}integer"/>
 *         &lt;element name="availability" type="{http://hl7.org/fhir}InstanceAvailability" minOccurs="0"/>
 *         &lt;element name="url" type="{http://hl7.org/fhir}uri" minOccurs="0"/>
 *         &lt;element name="bodySite" type="{http://hl7.org/fhir}Coding" minOccurs="0"/>
 *         &lt;element name="dateTime" type="{http://hl7.org/fhir}dateTime" minOccurs="0"/>
 *         &lt;element name="instance" type="{http://hl7.org/fhir}ImagingStudy.Instance" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ImagingStudy.Series", propOrder = {
    "number",
    "modality",
    "uid",
    "description",
    "numberOfInstances",
    "availability",
    "url",
    "bodySite",
    "dateTime",
    "instance"
})
@Entity(name = "ImagingStudySeries")
@Table(name = "IMAGINGSTUDYSERIES")
public class ImagingStudySeries
    extends BackboneElement
    implements Equals, HashCode
{

    protected Integer number;
    @XmlElement(required = true)
    protected Modality modality;
    @XmlElement(required = true)
    protected Oid uid;
    protected org.hl7.fhir.String description;
    @XmlElement(required = true)
    protected Integer numberOfInstances;
    protected InstanceAvailability availability;
    protected Uri url;
    protected Coding bodySite;
    protected DateTime dateTime;
    @XmlElement(required = true)
    protected List<ImagingStudyInstance> instance;

    /**
     * Gets the value of the number property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NUMBER__IMAGINGSTUDYSERIES_H_0")
    public Integer getNumber() {
        return number;
    }

    /**
     * Sets the value of the number property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumber(Integer value) {
        this.number = value;
    }

    /**
     * Gets the value of the modality property.
     * 
     * @return
     *     possible object is
     *     {@link Modality }
     *     
     */
    @ManyToOne(targetEntity = Modality.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MODALITY_IMAGINGSTUDYSERIES__0")
    public Modality getModality() {
        return modality;
    }

    /**
     * Sets the value of the modality property.
     * 
     * @param value
     *     allowed object is
     *     {@link Modality }
     *     
     */
    public void setModality(Modality value) {
        this.modality = value;
    }

    /**
     * Gets the value of the uid property.
     * 
     * @return
     *     possible object is
     *     {@link Oid }
     *     
     */
    @ManyToOne(targetEntity = Oid.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "UID__IMAGINGSTUDYSERIES_HJID")
    public Oid getUid() {
        return uid;
    }

    /**
     * Sets the value of the uid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Oid }
     *     
     */
    public void setUid(Oid value) {
        this.uid = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_IMAGINGSTUDYSERI_0")
    public org.hl7.fhir.String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setDescription(org.hl7.fhir.String value) {
        this.description = value;
    }

    /**
     * Gets the value of the numberOfInstances property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NUMBEROFINSTANCES_IMAGINGSTU_1")
    public Integer getNumberOfInstances() {
        return numberOfInstances;
    }

    /**
     * Sets the value of the numberOfInstances property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberOfInstances(Integer value) {
        this.numberOfInstances = value;
    }

    /**
     * Gets the value of the availability property.
     * 
     * @return
     *     possible object is
     *     {@link InstanceAvailability }
     *     
     */
    @ManyToOne(targetEntity = InstanceAvailability.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "AVAILABILITY_IMAGINGSTUDYSER_0")
    public InstanceAvailability getAvailability() {
        return availability;
    }

    /**
     * Sets the value of the availability property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstanceAvailability }
     *     
     */
    public void setAvailability(InstanceAvailability value) {
        this.availability = value;
    }

    /**
     * Gets the value of the url property.
     * 
     * @return
     *     possible object is
     *     {@link Uri }
     *     
     */
    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "URL_IMAGINGSTUDYSERIES_HJID")
    public Uri getUrl() {
        return url;
    }

    /**
     * Sets the value of the url property.
     * 
     * @param value
     *     allowed object is
     *     {@link Uri }
     *     
     */
    public void setUrl(Uri value) {
        this.url = value;
    }

    /**
     * Gets the value of the bodySite property.
     * 
     * @return
     *     possible object is
     *     {@link Coding }
     *     
     */
    @ManyToOne(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "BODYSITE_IMAGINGSTUDYSERIES__0")
    public Coding getBodySite() {
        return bodySite;
    }

    /**
     * Sets the value of the bodySite property.
     * 
     * @param value
     *     allowed object is
     *     {@link Coding }
     *     
     */
    public void setBodySite(Coding value) {
        this.bodySite = value;
    }

    /**
     * Gets the value of the dateTime property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATETIME_IMAGINGSTUDYSERIES__0")
    public DateTime getDateTime() {
        return dateTime;
    }

    /**
     * Sets the value of the dateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setDateTime(DateTime value) {
        this.dateTime = value;
    }

    /**
     * Gets the value of the instance property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instance property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstance().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ImagingStudyInstance }
     * 
     * 
     */
    @OneToMany(targetEntity = ImagingStudyInstance.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INSTANCE__IMAGINGSTUDYSERIES_0")
    public List<ImagingStudyInstance> getInstance() {
        if (instance == null) {
            instance = new ArrayList<ImagingStudyInstance>();
        }
        return this.instance;
    }

    /**
     * 
     * 
     */
    public void setInstance(List<ImagingStudyInstance> instance) {
        this.instance = instance;
    }

    public ImagingStudySeries withNumber(Integer value) {
        setNumber(value);
        return this;
    }

    public ImagingStudySeries withModality(Modality value) {
        setModality(value);
        return this;
    }

    public ImagingStudySeries withUid(Oid value) {
        setUid(value);
        return this;
    }

    public ImagingStudySeries withDescription(org.hl7.fhir.String value) {
        setDescription(value);
        return this;
    }

    public ImagingStudySeries withNumberOfInstances(Integer value) {
        setNumberOfInstances(value);
        return this;
    }

    public ImagingStudySeries withAvailability(InstanceAvailability value) {
        setAvailability(value);
        return this;
    }

    public ImagingStudySeries withUrl(Uri value) {
        setUrl(value);
        return this;
    }

    public ImagingStudySeries withBodySite(Coding value) {
        setBodySite(value);
        return this;
    }

    public ImagingStudySeries withDateTime(DateTime value) {
        setDateTime(value);
        return this;
    }

    public ImagingStudySeries withInstance(ImagingStudyInstance... values) {
        if (values!= null) {
            for (ImagingStudyInstance value: values) {
                getInstance().add(value);
            }
        }
        return this;
    }

    public ImagingStudySeries withInstance(Collection<ImagingStudyInstance> values) {
        if (values!= null) {
            getInstance().addAll(values);
        }
        return this;
    }

    public ImagingStudySeries withInstance(List<ImagingStudyInstance> instance) {
        setInstance(instance);
        return this;
    }

    @Override
    public ImagingStudySeries withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public ImagingStudySeries withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public ImagingStudySeries withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public ImagingStudySeries withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public ImagingStudySeries withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public ImagingStudySeries withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public ImagingStudySeries withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ImagingStudySeries)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ImagingStudySeries that = ((ImagingStudySeries) object);
        {
            Integer lhsNumber;
            lhsNumber = this.getNumber();
            Integer rhsNumber;
            rhsNumber = that.getNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "number", lhsNumber), LocatorUtils.property(thatLocator, "number", rhsNumber), lhsNumber, rhsNumber)) {
                return false;
            }
        }
        {
            Modality lhsModality;
            lhsModality = this.getModality();
            Modality rhsModality;
            rhsModality = that.getModality();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modality", lhsModality), LocatorUtils.property(thatLocator, "modality", rhsModality), lhsModality, rhsModality)) {
                return false;
            }
        }
        {
            Oid lhsUid;
            lhsUid = this.getUid();
            Oid rhsUid;
            rhsUid = that.getUid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uid", lhsUid), LocatorUtils.property(thatLocator, "uid", rhsUid), lhsUid, rhsUid)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsDescription;
            lhsDescription = this.getDescription();
            org.hl7.fhir.String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            Integer lhsNumberOfInstances;
            lhsNumberOfInstances = this.getNumberOfInstances();
            Integer rhsNumberOfInstances;
            rhsNumberOfInstances = that.getNumberOfInstances();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberOfInstances", lhsNumberOfInstances), LocatorUtils.property(thatLocator, "numberOfInstances", rhsNumberOfInstances), lhsNumberOfInstances, rhsNumberOfInstances)) {
                return false;
            }
        }
        {
            InstanceAvailability lhsAvailability;
            lhsAvailability = this.getAvailability();
            InstanceAvailability rhsAvailability;
            rhsAvailability = that.getAvailability();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "availability", lhsAvailability), LocatorUtils.property(thatLocator, "availability", rhsAvailability), lhsAvailability, rhsAvailability)) {
                return false;
            }
        }
        {
            Uri lhsUrl;
            lhsUrl = this.getUrl();
            Uri rhsUrl;
            rhsUrl = that.getUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsUrl), LocatorUtils.property(thatLocator, "url", rhsUrl), lhsUrl, rhsUrl)) {
                return false;
            }
        }
        {
            Coding lhsBodySite;
            lhsBodySite = this.getBodySite();
            Coding rhsBodySite;
            rhsBodySite = that.getBodySite();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bodySite", lhsBodySite), LocatorUtils.property(thatLocator, "bodySite", rhsBodySite), lhsBodySite, rhsBodySite)) {
                return false;
            }
        }
        {
            DateTime lhsDateTime;
            lhsDateTime = this.getDateTime();
            DateTime rhsDateTime;
            rhsDateTime = that.getDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateTime", lhsDateTime), LocatorUtils.property(thatLocator, "dateTime", rhsDateTime), lhsDateTime, rhsDateTime)) {
                return false;
            }
        }
        {
            List<ImagingStudyInstance> lhsInstance;
            lhsInstance = (((this.instance!= null)&&(!this.instance.isEmpty()))?this.getInstance():null);
            List<ImagingStudyInstance> rhsInstance;
            rhsInstance = (((that.instance!= null)&&(!that.instance.isEmpty()))?that.getInstance():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instance", lhsInstance), LocatorUtils.property(thatLocator, "instance", rhsInstance), lhsInstance, rhsInstance)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Integer theNumber;
            theNumber = this.getNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "number", theNumber), currentHashCode, theNumber);
        }
        {
            Modality theModality;
            theModality = this.getModality();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modality", theModality), currentHashCode, theModality);
        }
        {
            Oid theUid;
            theUid = this.getUid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uid", theUid), currentHashCode, theUid);
        }
        {
            org.hl7.fhir.String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            Integer theNumberOfInstances;
            theNumberOfInstances = this.getNumberOfInstances();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberOfInstances", theNumberOfInstances), currentHashCode, theNumberOfInstances);
        }
        {
            InstanceAvailability theAvailability;
            theAvailability = this.getAvailability();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "availability", theAvailability), currentHashCode, theAvailability);
        }
        {
            Uri theUrl;
            theUrl = this.getUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theUrl), currentHashCode, theUrl);
        }
        {
            Coding theBodySite;
            theBodySite = this.getBodySite();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bodySite", theBodySite), currentHashCode, theBodySite);
        }
        {
            DateTime theDateTime;
            theDateTime = this.getDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateTime", theDateTime), currentHashCode, theDateTime);
        }
        {
            List<ImagingStudyInstance> theInstance;
            theInstance = (((this.instance!= null)&&(!this.instance.isEmpty()))?this.getInstance():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instance", theInstance), currentHashCode, theInstance);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
