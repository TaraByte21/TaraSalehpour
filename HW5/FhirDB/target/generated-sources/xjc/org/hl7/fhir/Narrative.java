//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
 * 
 * <p>Java class for Narrative complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Narrative">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Element">
 *       &lt;sequence>
 *         &lt;element name="status" type="{http://hl7.org/fhir}NarrativeStatus"/>
 *         &lt;element name="div" type="{http://hl7.org/fhir}string"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Narrative", propOrder = {
    "status",
    "div"
})
@Entity(name = "Narrative")
@Table(name = "NARRATIVE")
public class Narrative
    extends Element
    implements Equals, HashCode
{

    @XmlElement(required = true)
    protected NarrativeStatus status;
    @XmlElement(required = true)
    protected org.hl7.fhir.String div;

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link NarrativeStatus }
     *     
     */
    @ManyToOne(targetEntity = NarrativeStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_NARRATIVE_HJID")
    public NarrativeStatus getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link NarrativeStatus }
     *     
     */
    public void setStatus(NarrativeStatus value) {
        this.status = value;
    }

    /**
     * Gets the value of the div property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DIV_NARRATIVE_HJID")
    public org.hl7.fhir.String getDiv() {
        return div;
    }

    /**
     * Sets the value of the div property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setDiv(org.hl7.fhir.String value) {
        this.div = value;
    }

    public Narrative withStatus(NarrativeStatus value) {
        setStatus(value);
        return this;
    }

    public Narrative withDiv(org.hl7.fhir.String value) {
        setDiv(value);
        return this;
    }

    @Override
    public Narrative withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public Narrative withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public Narrative withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public Narrative withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Narrative)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Narrative that = ((Narrative) object);
        {
            NarrativeStatus lhsStatus;
            lhsStatus = this.getStatus();
            NarrativeStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsDiv;
            lhsDiv = this.getDiv();
            org.hl7.fhir.String rhsDiv;
            rhsDiv = that.getDiv();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "div", lhsDiv), LocatorUtils.property(thatLocator, "div", rhsDiv), lhsDiv, rhsDiv)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            NarrativeStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            org.hl7.fhir.String theDiv;
            theDiv = this.getDiv();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "div", theDiv), currentHashCode, theDiv);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
