//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
 * 
 * <p>Java class for HumanName complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HumanName">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Element">
 *       &lt;sequence>
 *         &lt;element name="use" type="{http://hl7.org/fhir}NameUse" minOccurs="0"/>
 *         &lt;element name="text" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="family" type="{http://hl7.org/fhir}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="given" type="{http://hl7.org/fhir}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="prefix" type="{http://hl7.org/fhir}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="suffix" type="{http://hl7.org/fhir}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="period" type="{http://hl7.org/fhir}Period" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HumanName", propOrder = {
    "use",
    "text",
    "family",
    "given",
    "prefix",
    "suffix",
    "period"
})
@Entity(name = "HumanName")
@Table(name = "HUMANNAME")
public class HumanName
    extends Element
    implements Equals, HashCode
{

    protected NameUse use;
    protected org.hl7.fhir.String text;
    protected List<org.hl7.fhir.String> family;
    protected List<org.hl7.fhir.String> given;
    protected List<org.hl7.fhir.String> prefix;
    protected List<org.hl7.fhir.String> suffix;
    protected Period period;

    /**
     * Gets the value of the use property.
     * 
     * @return
     *     possible object is
     *     {@link NameUse }
     *     
     */
    @ManyToOne(targetEntity = NameUse.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "USE__HUMANNAME_HJID")
    public NameUse getUse() {
        return use;
    }

    /**
     * Sets the value of the use property.
     * 
     * @param value
     *     allowed object is
     *     {@link NameUse }
     *     
     */
    public void setUse(NameUse value) {
        this.use = value;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEXT_HUMANNAME_HJID")
    public org.hl7.fhir.String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setText(org.hl7.fhir.String value) {
        this.text = value;
    }

    /**
     * Gets the value of the family property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the family property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFamily().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link org.hl7.fhir.String }
     * 
     * 
     */
    @OneToMany(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "FAMILY_HUMANNAME_HJID")
    public List<org.hl7.fhir.String> getFamily() {
        if (family == null) {
            family = new ArrayList<org.hl7.fhir.String>();
        }
        return this.family;
    }

    /**
     * 
     * 
     */
    public void setFamily(List<org.hl7.fhir.String> family) {
        this.family = family;
    }

    /**
     * Gets the value of the given property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the given property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGiven().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link org.hl7.fhir.String }
     * 
     * 
     */
    @OneToMany(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GIVEN_HUMANNAME_HJID")
    public List<org.hl7.fhir.String> getGiven() {
        if (given == null) {
            given = new ArrayList<org.hl7.fhir.String>();
        }
        return this.given;
    }

    /**
     * 
     * 
     */
    public void setGiven(List<org.hl7.fhir.String> given) {
        this.given = given;
    }

    /**
     * Gets the value of the prefix property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the prefix property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPrefix().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link org.hl7.fhir.String }
     * 
     * 
     */
    @OneToMany(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PREFIX__HUMANNAME_HJID")
    public List<org.hl7.fhir.String> getPrefix() {
        if (prefix == null) {
            prefix = new ArrayList<org.hl7.fhir.String>();
        }
        return this.prefix;
    }

    /**
     * 
     * 
     */
    public void setPrefix(List<org.hl7.fhir.String> prefix) {
        this.prefix = prefix;
    }

    /**
     * Gets the value of the suffix property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the suffix property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSuffix().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link org.hl7.fhir.String }
     * 
     * 
     */
    @OneToMany(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUFFIX_HUMANNAME_HJID")
    public List<org.hl7.fhir.String> getSuffix() {
        if (suffix == null) {
            suffix = new ArrayList<org.hl7.fhir.String>();
        }
        return this.suffix;
    }

    /**
     * 
     * 
     */
    public void setSuffix(List<org.hl7.fhir.String> suffix) {
        this.suffix = suffix;
    }

    /**
     * Gets the value of the period property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERIOD_HUMANNAME_HJID")
    public Period getPeriod() {
        return period;
    }

    /**
     * Sets the value of the period property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setPeriod(Period value) {
        this.period = value;
    }

    public HumanName withUse(NameUse value) {
        setUse(value);
        return this;
    }

    public HumanName withText(org.hl7.fhir.String value) {
        setText(value);
        return this;
    }

    public HumanName withFamily(org.hl7.fhir.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.String value: values) {
                getFamily().add(value);
            }
        }
        return this;
    }

    public HumanName withFamily(Collection<org.hl7.fhir.String> values) {
        if (values!= null) {
            getFamily().addAll(values);
        }
        return this;
    }

    public HumanName withFamily(List<org.hl7.fhir.String> family) {
        setFamily(family);
        return this;
    }

    public HumanName withGiven(org.hl7.fhir.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.String value: values) {
                getGiven().add(value);
            }
        }
        return this;
    }

    public HumanName withGiven(Collection<org.hl7.fhir.String> values) {
        if (values!= null) {
            getGiven().addAll(values);
        }
        return this;
    }

    public HumanName withGiven(List<org.hl7.fhir.String> given) {
        setGiven(given);
        return this;
    }

    public HumanName withPrefix(org.hl7.fhir.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.String value: values) {
                getPrefix().add(value);
            }
        }
        return this;
    }

    public HumanName withPrefix(Collection<org.hl7.fhir.String> values) {
        if (values!= null) {
            getPrefix().addAll(values);
        }
        return this;
    }

    public HumanName withPrefix(List<org.hl7.fhir.String> prefix) {
        setPrefix(prefix);
        return this;
    }

    public HumanName withSuffix(org.hl7.fhir.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.String value: values) {
                getSuffix().add(value);
            }
        }
        return this;
    }

    public HumanName withSuffix(Collection<org.hl7.fhir.String> values) {
        if (values!= null) {
            getSuffix().addAll(values);
        }
        return this;
    }

    public HumanName withSuffix(List<org.hl7.fhir.String> suffix) {
        setSuffix(suffix);
        return this;
    }

    public HumanName withPeriod(Period value) {
        setPeriod(value);
        return this;
    }

    @Override
    public HumanName withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public HumanName withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public HumanName withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public HumanName withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof HumanName)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final HumanName that = ((HumanName) object);
        {
            NameUse lhsUse;
            lhsUse = this.getUse();
            NameUse rhsUse;
            rhsUse = that.getUse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "use", lhsUse), LocatorUtils.property(thatLocator, "use", rhsUse), lhsUse, rhsUse)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsText;
            lhsText = this.getText();
            org.hl7.fhir.String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.String> lhsFamily;
            lhsFamily = (((this.family!= null)&&(!this.family.isEmpty()))?this.getFamily():null);
            List<org.hl7.fhir.String> rhsFamily;
            rhsFamily = (((that.family!= null)&&(!that.family.isEmpty()))?that.getFamily():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "family", lhsFamily), LocatorUtils.property(thatLocator, "family", rhsFamily), lhsFamily, rhsFamily)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.String> lhsGiven;
            lhsGiven = (((this.given!= null)&&(!this.given.isEmpty()))?this.getGiven():null);
            List<org.hl7.fhir.String> rhsGiven;
            rhsGiven = (((that.given!= null)&&(!that.given.isEmpty()))?that.getGiven():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "given", lhsGiven), LocatorUtils.property(thatLocator, "given", rhsGiven), lhsGiven, rhsGiven)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.String> lhsPrefix;
            lhsPrefix = (((this.prefix!= null)&&(!this.prefix.isEmpty()))?this.getPrefix():null);
            List<org.hl7.fhir.String> rhsPrefix;
            rhsPrefix = (((that.prefix!= null)&&(!that.prefix.isEmpty()))?that.getPrefix():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prefix", lhsPrefix), LocatorUtils.property(thatLocator, "prefix", rhsPrefix), lhsPrefix, rhsPrefix)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.String> lhsSuffix;
            lhsSuffix = (((this.suffix!= null)&&(!this.suffix.isEmpty()))?this.getSuffix():null);
            List<org.hl7.fhir.String> rhsSuffix;
            rhsSuffix = (((that.suffix!= null)&&(!that.suffix.isEmpty()))?that.getSuffix():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suffix", lhsSuffix), LocatorUtils.property(thatLocator, "suffix", rhsSuffix), lhsSuffix, rhsSuffix)) {
                return false;
            }
        }
        {
            Period lhsPeriod;
            lhsPeriod = this.getPeriod();
            Period rhsPeriod;
            rhsPeriod = that.getPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "period", lhsPeriod), LocatorUtils.property(thatLocator, "period", rhsPeriod), lhsPeriod, rhsPeriod)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            NameUse theUse;
            theUse = this.getUse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "use", theUse), currentHashCode, theUse);
        }
        {
            org.hl7.fhir.String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        {
            List<org.hl7.fhir.String> theFamily;
            theFamily = (((this.family!= null)&&(!this.family.isEmpty()))?this.getFamily():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "family", theFamily), currentHashCode, theFamily);
        }
        {
            List<org.hl7.fhir.String> theGiven;
            theGiven = (((this.given!= null)&&(!this.given.isEmpty()))?this.getGiven():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "given", theGiven), currentHashCode, theGiven);
        }
        {
            List<org.hl7.fhir.String> thePrefix;
            thePrefix = (((this.prefix!= null)&&(!this.prefix.isEmpty()))?this.getPrefix():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prefix", thePrefix), currentHashCode, thePrefix);
        }
        {
            List<org.hl7.fhir.String> theSuffix;
            theSuffix = (((this.suffix!= null)&&(!this.suffix.isEmpty()))?this.getSuffix():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suffix", theSuffix), currentHashCode, theSuffix);
        }
        {
            Period thePeriod;
            thePeriod = this.getPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "period", thePeriod), currentHashCode, thePeriod);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
