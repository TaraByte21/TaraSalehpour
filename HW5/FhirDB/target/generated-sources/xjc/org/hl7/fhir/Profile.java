//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have either a @value, an @id, or extensions
 * 
 * <p>Java class for Profile complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Profile">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Resource">
 *       &lt;sequence>
 *         &lt;element name="identifier" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="version" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="name" type="{http://hl7.org/fhir}string"/>
 *         &lt;element name="publisher" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="telecom" type="{http://hl7.org/fhir}Contact" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="description" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="code" type="{http://hl7.org/fhir}Coding" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="status" type="{http://hl7.org/fhir}ResourceProfileStatus"/>
 *         &lt;element name="experimental" type="{http://hl7.org/fhir}boolean" minOccurs="0"/>
 *         &lt;element name="date" type="{http://hl7.org/fhir}dateTime" minOccurs="0"/>
 *         &lt;element name="requirements" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="fhirVersion" type="{http://hl7.org/fhir}id" minOccurs="0"/>
 *         &lt;element name="mapping" type="{http://hl7.org/fhir}Profile.Mapping" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="structure" type="{http://hl7.org/fhir}Profile.Structure" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="extensionDefn" type="{http://hl7.org/fhir}Profile.ExtensionDefn" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="query" type="{http://hl7.org/fhir}Profile.Query" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile", propOrder = {
    "identifier",
    "version",
    "name",
    "publisher",
    "telecom",
    "description",
    "code",
    "status",
    "experimental",
    "date",
    "requirements",
    "fhirVersion",
    "mapping",
    "structure",
    "extensionDefn",
    "query"
})
@Entity(name = "Profile")
@Table(name = "PROFILE")
public class Profile
    extends Resource
    implements Equals, HashCode
{

    protected org.hl7.fhir.String identifier;
    protected org.hl7.fhir.String version;
    @XmlElement(required = true)
    protected org.hl7.fhir.String name;
    protected org.hl7.fhir.String publisher;
    protected List<Contact> telecom;
    protected org.hl7.fhir.String description;
    protected List<Coding> code;
    @XmlElement(required = true)
    protected ResourceProfileStatus status;
    protected Boolean experimental;
    protected DateTime date;
    protected org.hl7.fhir.String requirements;
    protected Id fhirVersion;
    protected List<ProfileMapping> mapping;
    protected List<ProfileStructure> structure;
    protected List<ProfileExtensionDefn> extensionDefn;
    protected List<ProfileQuery> query;

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IDENTIFIER_PROFILE_HJID")
    public org.hl7.fhir.String getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setIdentifier(org.hl7.fhir.String value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VERSION__PROFILE_HJID")
    public org.hl7.fhir.String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setVersion(org.hl7.fhir.String value) {
        this.version = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__PROFILE_HJID")
    public org.hl7.fhir.String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setName(org.hl7.fhir.String value) {
        this.name = value;
    }

    /**
     * Gets the value of the publisher property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PUBLISHER_PROFILE_HJID")
    public org.hl7.fhir.String getPublisher() {
        return publisher;
    }

    /**
     * Sets the value of the publisher property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setPublisher(org.hl7.fhir.String value) {
        this.publisher = value;
    }

    /**
     * Gets the value of the telecom property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the telecom property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTelecom().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Contact }
     * 
     * 
     */
    @OneToMany(targetEntity = Contact.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TELECOM_PROFILE_HJID")
    public List<Contact> getTelecom() {
        if (telecom == null) {
            telecom = new ArrayList<Contact>();
        }
        return this.telecom;
    }

    /**
     * 
     * 
     */
    public void setTelecom(List<Contact> telecom) {
        this.telecom = telecom;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_PROFILE_HJID")
    public org.hl7.fhir.String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setDescription(org.hl7.fhir.String value) {
        this.description = value;
    }

    /**
     * Gets the value of the code property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the code property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Coding }
     * 
     * 
     */
    @OneToMany(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODE_PROFILE_HJID")
    public List<Coding> getCode() {
        if (code == null) {
            code = new ArrayList<Coding>();
        }
        return this.code;
    }

    /**
     * 
     * 
     */
    public void setCode(List<Coding> code) {
        this.code = code;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceProfileStatus }
     *     
     */
    @ManyToOne(targetEntity = ResourceProfileStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_PROFILE_HJID")
    public ResourceProfileStatus getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceProfileStatus }
     *     
     */
    public void setStatus(ResourceProfileStatus value) {
        this.status = value;
    }

    /**
     * Gets the value of the experimental property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXPERIMENTAL_PROFILE_HJID")
    public Boolean getExperimental() {
        return experimental;
    }

    /**
     * Sets the value of the experimental property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setExperimental(Boolean value) {
        this.experimental = value;
    }

    /**
     * Gets the value of the date property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATE__PROFILE_HJID")
    public DateTime getDate() {
        return date;
    }

    /**
     * Sets the value of the date property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setDate(DateTime value) {
        this.date = value;
    }

    /**
     * Gets the value of the requirements property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REQUIREMENTS_PROFILE_HJID")
    public org.hl7.fhir.String getRequirements() {
        return requirements;
    }

    /**
     * Sets the value of the requirements property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setRequirements(org.hl7.fhir.String value) {
        this.requirements = value;
    }

    /**
     * Gets the value of the fhirVersion property.
     * 
     * @return
     *     possible object is
     *     {@link Id }
     *     
     */
    @ManyToOne(targetEntity = Id.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "FHIRVERSION_PROFILE_HJID")
    public Id getFhirVersion() {
        return fhirVersion;
    }

    /**
     * Sets the value of the fhirVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link Id }
     *     
     */
    public void setFhirVersion(Id value) {
        this.fhirVersion = value;
    }

    /**
     * Gets the value of the mapping property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the mapping property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMapping().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProfileMapping }
     * 
     * 
     */
    @OneToMany(targetEntity = ProfileMapping.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MAPPING_PROFILE_HJID")
    public List<ProfileMapping> getMapping() {
        if (mapping == null) {
            mapping = new ArrayList<ProfileMapping>();
        }
        return this.mapping;
    }

    /**
     * 
     * 
     */
    public void setMapping(List<ProfileMapping> mapping) {
        this.mapping = mapping;
    }

    /**
     * Gets the value of the structure property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the structure property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStructure().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProfileStructure }
     * 
     * 
     */
    @OneToMany(targetEntity = ProfileStructure.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STRUCTURE__PROFILE_HJID")
    public List<ProfileStructure> getStructure() {
        if (structure == null) {
            structure = new ArrayList<ProfileStructure>();
        }
        return this.structure;
    }

    /**
     * 
     * 
     */
    public void setStructure(List<ProfileStructure> structure) {
        this.structure = structure;
    }

    /**
     * Gets the value of the extensionDefn property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extensionDefn property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtensionDefn().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProfileExtensionDefn }
     * 
     * 
     */
    @OneToMany(targetEntity = ProfileExtensionDefn.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXTENSIONDEFN_PROFILE_HJID")
    public List<ProfileExtensionDefn> getExtensionDefn() {
        if (extensionDefn == null) {
            extensionDefn = new ArrayList<ProfileExtensionDefn>();
        }
        return this.extensionDefn;
    }

    /**
     * 
     * 
     */
    public void setExtensionDefn(List<ProfileExtensionDefn> extensionDefn) {
        this.extensionDefn = extensionDefn;
    }

    /**
     * Gets the value of the query property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the query property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuery().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProfileQuery }
     * 
     * 
     */
    @OneToMany(targetEntity = ProfileQuery.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "QUERY_PROFILE_HJID")
    public List<ProfileQuery> getQuery() {
        if (query == null) {
            query = new ArrayList<ProfileQuery>();
        }
        return this.query;
    }

    /**
     * 
     * 
     */
    public void setQuery(List<ProfileQuery> query) {
        this.query = query;
    }

    public Profile withIdentifier(org.hl7.fhir.String value) {
        setIdentifier(value);
        return this;
    }

    public Profile withVersion(org.hl7.fhir.String value) {
        setVersion(value);
        return this;
    }

    public Profile withName(org.hl7.fhir.String value) {
        setName(value);
        return this;
    }

    public Profile withPublisher(org.hl7.fhir.String value) {
        setPublisher(value);
        return this;
    }

    public Profile withTelecom(Contact... values) {
        if (values!= null) {
            for (Contact value: values) {
                getTelecom().add(value);
            }
        }
        return this;
    }

    public Profile withTelecom(Collection<Contact> values) {
        if (values!= null) {
            getTelecom().addAll(values);
        }
        return this;
    }

    public Profile withTelecom(List<Contact> telecom) {
        setTelecom(telecom);
        return this;
    }

    public Profile withDescription(org.hl7.fhir.String value) {
        setDescription(value);
        return this;
    }

    public Profile withCode(Coding... values) {
        if (values!= null) {
            for (Coding value: values) {
                getCode().add(value);
            }
        }
        return this;
    }

    public Profile withCode(Collection<Coding> values) {
        if (values!= null) {
            getCode().addAll(values);
        }
        return this;
    }

    public Profile withCode(List<Coding> code) {
        setCode(code);
        return this;
    }

    public Profile withStatus(ResourceProfileStatus value) {
        setStatus(value);
        return this;
    }

    public Profile withExperimental(Boolean value) {
        setExperimental(value);
        return this;
    }

    public Profile withDate(DateTime value) {
        setDate(value);
        return this;
    }

    public Profile withRequirements(org.hl7.fhir.String value) {
        setRequirements(value);
        return this;
    }

    public Profile withFhirVersion(Id value) {
        setFhirVersion(value);
        return this;
    }

    public Profile withMapping(ProfileMapping... values) {
        if (values!= null) {
            for (ProfileMapping value: values) {
                getMapping().add(value);
            }
        }
        return this;
    }

    public Profile withMapping(Collection<ProfileMapping> values) {
        if (values!= null) {
            getMapping().addAll(values);
        }
        return this;
    }

    public Profile withMapping(List<ProfileMapping> mapping) {
        setMapping(mapping);
        return this;
    }

    public Profile withStructure(ProfileStructure... values) {
        if (values!= null) {
            for (ProfileStructure value: values) {
                getStructure().add(value);
            }
        }
        return this;
    }

    public Profile withStructure(Collection<ProfileStructure> values) {
        if (values!= null) {
            getStructure().addAll(values);
        }
        return this;
    }

    public Profile withStructure(List<ProfileStructure> structure) {
        setStructure(structure);
        return this;
    }

    public Profile withExtensionDefn(ProfileExtensionDefn... values) {
        if (values!= null) {
            for (ProfileExtensionDefn value: values) {
                getExtensionDefn().add(value);
            }
        }
        return this;
    }

    public Profile withExtensionDefn(Collection<ProfileExtensionDefn> values) {
        if (values!= null) {
            getExtensionDefn().addAll(values);
        }
        return this;
    }

    public Profile withExtensionDefn(List<ProfileExtensionDefn> extensionDefn) {
        setExtensionDefn(extensionDefn);
        return this;
    }

    public Profile withQuery(ProfileQuery... values) {
        if (values!= null) {
            for (ProfileQuery value: values) {
                getQuery().add(value);
            }
        }
        return this;
    }

    public Profile withQuery(Collection<ProfileQuery> values) {
        if (values!= null) {
            getQuery().addAll(values);
        }
        return this;
    }

    public Profile withQuery(List<ProfileQuery> query) {
        setQuery(query);
        return this;
    }

    @Override
    public Profile withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public Profile withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public Profile withContained(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContained().add(value);
            }
        }
        return this;
    }

    @Override
    public Profile withContained(Collection<ResourceInline> values) {
        if (values!= null) {
            getContained().addAll(values);
        }
        return this;
    }

    @Override
    public Profile withContained(List<ResourceInline> contained) {
        setContained(contained);
        return this;
    }

    @Override
    public Profile withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public Profile withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public Profile withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public Profile withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public Profile withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public Profile withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public Profile withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Profile)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Profile that = ((Profile) object);
        {
            org.hl7.fhir.String lhsIdentifier;
            lhsIdentifier = this.getIdentifier();
            org.hl7.fhir.String rhsIdentifier;
            rhsIdentifier = that.getIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identifier", lhsIdentifier), LocatorUtils.property(thatLocator, "identifier", rhsIdentifier), lhsIdentifier, rhsIdentifier)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsVersion;
            lhsVersion = this.getVersion();
            org.hl7.fhir.String rhsVersion;
            rhsVersion = that.getVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsPublisher;
            lhsPublisher = this.getPublisher();
            org.hl7.fhir.String rhsPublisher;
            rhsPublisher = that.getPublisher();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publisher", lhsPublisher), LocatorUtils.property(thatLocator, "publisher", rhsPublisher), lhsPublisher, rhsPublisher)) {
                return false;
            }
        }
        {
            List<Contact> lhsTelecom;
            lhsTelecom = (((this.telecom!= null)&&(!this.telecom.isEmpty()))?this.getTelecom():null);
            List<Contact> rhsTelecom;
            rhsTelecom = (((that.telecom!= null)&&(!that.telecom.isEmpty()))?that.getTelecom():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "telecom", lhsTelecom), LocatorUtils.property(thatLocator, "telecom", rhsTelecom), lhsTelecom, rhsTelecom)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsDescription;
            lhsDescription = this.getDescription();
            org.hl7.fhir.String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            List<Coding> lhsCode;
            lhsCode = (((this.code!= null)&&(!this.code.isEmpty()))?this.getCode():null);
            List<Coding> rhsCode;
            rhsCode = (((that.code!= null)&&(!that.code.isEmpty()))?that.getCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            ResourceProfileStatus lhsStatus;
            lhsStatus = this.getStatus();
            ResourceProfileStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            Boolean lhsExperimental;
            lhsExperimental = this.getExperimental();
            Boolean rhsExperimental;
            rhsExperimental = that.getExperimental();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "experimental", lhsExperimental), LocatorUtils.property(thatLocator, "experimental", rhsExperimental), lhsExperimental, rhsExperimental)) {
                return false;
            }
        }
        {
            DateTime lhsDate;
            lhsDate = this.getDate();
            DateTime rhsDate;
            rhsDate = that.getDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "date", lhsDate), LocatorUtils.property(thatLocator, "date", rhsDate), lhsDate, rhsDate)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsRequirements;
            lhsRequirements = this.getRequirements();
            org.hl7.fhir.String rhsRequirements;
            rhsRequirements = that.getRequirements();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requirements", lhsRequirements), LocatorUtils.property(thatLocator, "requirements", rhsRequirements), lhsRequirements, rhsRequirements)) {
                return false;
            }
        }
        {
            Id lhsFhirVersion;
            lhsFhirVersion = this.getFhirVersion();
            Id rhsFhirVersion;
            rhsFhirVersion = that.getFhirVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fhirVersion", lhsFhirVersion), LocatorUtils.property(thatLocator, "fhirVersion", rhsFhirVersion), lhsFhirVersion, rhsFhirVersion)) {
                return false;
            }
        }
        {
            List<ProfileMapping> lhsMapping;
            lhsMapping = (((this.mapping!= null)&&(!this.mapping.isEmpty()))?this.getMapping():null);
            List<ProfileMapping> rhsMapping;
            rhsMapping = (((that.mapping!= null)&&(!that.mapping.isEmpty()))?that.getMapping():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mapping", lhsMapping), LocatorUtils.property(thatLocator, "mapping", rhsMapping), lhsMapping, rhsMapping)) {
                return false;
            }
        }
        {
            List<ProfileStructure> lhsStructure;
            lhsStructure = (((this.structure!= null)&&(!this.structure.isEmpty()))?this.getStructure():null);
            List<ProfileStructure> rhsStructure;
            rhsStructure = (((that.structure!= null)&&(!that.structure.isEmpty()))?that.getStructure():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "structure", lhsStructure), LocatorUtils.property(thatLocator, "structure", rhsStructure), lhsStructure, rhsStructure)) {
                return false;
            }
        }
        {
            List<ProfileExtensionDefn> lhsExtensionDefn;
            lhsExtensionDefn = (((this.extensionDefn!= null)&&(!this.extensionDefn.isEmpty()))?this.getExtensionDefn():null);
            List<ProfileExtensionDefn> rhsExtensionDefn;
            rhsExtensionDefn = (((that.extensionDefn!= null)&&(!that.extensionDefn.isEmpty()))?that.getExtensionDefn():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extensionDefn", lhsExtensionDefn), LocatorUtils.property(thatLocator, "extensionDefn", rhsExtensionDefn), lhsExtensionDefn, rhsExtensionDefn)) {
                return false;
            }
        }
        {
            List<ProfileQuery> lhsQuery;
            lhsQuery = (((this.query!= null)&&(!this.query.isEmpty()))?this.getQuery():null);
            List<ProfileQuery> rhsQuery;
            rhsQuery = (((that.query!= null)&&(!that.query.isEmpty()))?that.getQuery():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "query", lhsQuery), LocatorUtils.property(thatLocator, "query", rhsQuery), lhsQuery, rhsQuery)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.String theIdentifier;
            theIdentifier = this.getIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifier", theIdentifier), currentHashCode, theIdentifier);
        }
        {
            org.hl7.fhir.String theVersion;
            theVersion = this.getVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "version", theVersion), currentHashCode, theVersion);
        }
        {
            org.hl7.fhir.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            org.hl7.fhir.String thePublisher;
            thePublisher = this.getPublisher();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publisher", thePublisher), currentHashCode, thePublisher);
        }
        {
            List<Contact> theTelecom;
            theTelecom = (((this.telecom!= null)&&(!this.telecom.isEmpty()))?this.getTelecom():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "telecom", theTelecom), currentHashCode, theTelecom);
        }
        {
            org.hl7.fhir.String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            List<Coding> theCode;
            theCode = (((this.code!= null)&&(!this.code.isEmpty()))?this.getCode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            ResourceProfileStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            Boolean theExperimental;
            theExperimental = this.getExperimental();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "experimental", theExperimental), currentHashCode, theExperimental);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "date", theDate), currentHashCode, theDate);
        }
        {
            org.hl7.fhir.String theRequirements;
            theRequirements = this.getRequirements();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requirements", theRequirements), currentHashCode, theRequirements);
        }
        {
            Id theFhirVersion;
            theFhirVersion = this.getFhirVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fhirVersion", theFhirVersion), currentHashCode, theFhirVersion);
        }
        {
            List<ProfileMapping> theMapping;
            theMapping = (((this.mapping!= null)&&(!this.mapping.isEmpty()))?this.getMapping():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mapping", theMapping), currentHashCode, theMapping);
        }
        {
            List<ProfileStructure> theStructure;
            theStructure = (((this.structure!= null)&&(!this.structure.isEmpty()))?this.getStructure():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "structure", theStructure), currentHashCode, theStructure);
        }
        {
            List<ProfileExtensionDefn> theExtensionDefn;
            theExtensionDefn = (((this.extensionDefn!= null)&&(!this.extensionDefn.isEmpty()))?this.getExtensionDefn():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extensionDefn", theExtensionDefn), currentHashCode, theExtensionDefn);
        }
        {
            List<ProfileQuery> theQuery;
            theQuery = (((this.query!= null)&&(!this.query.isEmpty()))?this.getQuery():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "query", theQuery), currentHashCode, theQuery);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
