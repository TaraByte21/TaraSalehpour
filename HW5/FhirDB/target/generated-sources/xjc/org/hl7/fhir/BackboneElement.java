//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * An element defined in a FHIR resources - can have modifierExtension elements
 * 
 * <p>Java class for BackboneElement complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BackboneElement">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Element">
 *       &lt;sequence>
 *         &lt;element name="modifierExtension" type="{http://hl7.org/fhir}Extension" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BackboneElement", propOrder = {
    "modifierExtension"
})
@XmlSeeAlso({
    SecurityEventSource.class,
    ProfileQuery.class,
    SecurityEventParticipant.class,
    SecurityEventDetail.class,
    MessageHeaderSource.class,
    ProfileType.class,
    ConceptMapMap.class,
    SupplyDispense.class,
    PatientContact.class,
    ConditionLocation.class,
    DeviceObservationReportChannel.class,
    ConformanceMessaging.class,
    QueryResponse.class,
    ValueSetDefine.class,
    AdverseReactionExposure.class,
    MedicationContent.class,
    EncounterLocation.class,
    CompositionAttester.class,
    ImmunizationVaccinationProtocol.class,
    ConformanceCertificate.class,
    EncounterAccomodation.class,
    DocumentReferenceService.class,
    ConformanceOperation1 .class,
    MedicationDispenseSubstitution.class,
    MedicationAdministrationDosage.class,
    ProfileMapping.class,
    ObservationRelated.class,
    ProfileConstraint.class,
    ImmunizationRecommendationRecommendation.class,
    ConformanceSoftware.class,
    OrganizationContact.class,
    SecurityEventEvent.class,
    ConceptMapConcept.class,
    CarePlanParticipant.class,
    ValueSetInclude.class,
    CarePlanGoal.class,
    MedicationPrescriptionSubstitution.class,
    ProfileElement.class,
    EncounterParticipant.class,
    ConditionEvidence.class,
    PatientLink.class,
    MessageHeaderDestination.class,
    DocumentReferenceParameter.class,
    SpecimenTreatment.class,
    MedicationPrescriptionDosageInstruction.class,
    SpecimenContainer.class,
    ConditionRelatedItem.class,
    DiagnosticOrderEvent.class,
    ProfileMapping1 .class,
    PatientAnimal.class,
    ValueSetFilter.class,
    ProcedurePerformer.class,
    EncounterHospitalization.class,
    MedicationStatementDosage.class,
    MedicationIngredient.class,
    ProfileStructure.class,
    ImmunizationReaction.class,
    SecurityEventObject.class,
    ValueSetCompose.class,
    ConformanceImplementation.class,
    ProvenanceEntity.class,
    ConformanceDocument.class,
    DeviceObservationReportMetric.class,
    ConformanceSearchParam.class,
    ImmunizationRecommendationProtocol.class,
    DocumentReferenceRelatesTo.class,
    PractitionerQualification.class,
    DeviceObservationReportVirtualDevice.class,
    MedicationDispenseDispense.class,
    CarePlanActivity.class,
    ConformanceOperation.class,
    DocumentReferenceContext.class,
    FamilyHistoryRelation.class,
    FamilyHistoryCondition.class,
    ImagingStudyInstance.class,
    SubstanceInstance.class,
    ObservationReferenceRange.class,
    CompositionSection.class,
    MedicationProduct.class,
    ProfileBinding.class,
    SubstanceIngredient.class,
    CarePlanSimple.class,
    ValueSetContains.class,
    CompositionEvent.class,
    ConformanceSecurity.class,
    ValueSetExpansion.class,
    ConformanceResource.class,
    ConformanceRest.class,
    ProfileSlicing.class,
    ProvenanceAgent.class,
    Resource.class,
    QuestionnaireGroup.class,
    SpecimenSource.class,
    ProcedureRelatedItem.class,
    SecurityEventNetwork.class,
    LocationPosition.class,
    ConditionStage.class,
    ConformanceQuery.class,
    ProfileSearchParam.class,
    ConceptMapDependsOn.class,
    ProfileExtensionDefn.class,
    QuestionnaireQuestion.class,
    MedicationPackage.class,
    DiagnosticReportImage.class,
    ConformanceEvent.class,
    MessageHeaderResponse.class,
    ValueSetConcept.class,
    SpecimenCollection.class,
    MedicationPrescriptionDispense.class,
    ListEntry.class,
    OperationOutcomeIssue.class,
    MedicationDispenseDosage.class,
    OrderWhen.class,
    AdverseReactionSymptom.class,
    ImmunizationExplanation.class,
    GroupCharacteristic.class,
    ProfileDefinition.class,
    DiagnosticOrderItem.class,
    ImmunizationRecommendationDateCriterion.class,
    ImagingStudySeries.class
})
@Entity(name = "BackboneElement")
@Table(name = "BACKBONEELEMENT")
public class BackboneElement
    extends Element
    implements Equals, HashCode
{

    protected List<Extension> modifierExtension;

    /**
     * Gets the value of the modifierExtension property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the modifierExtension property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getModifierExtension().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Extension }
     * 
     * 
     */
    @OneToMany(targetEntity = Extension.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MODIFIEREXTENSION_BACKBONEEL_0")
    public List<Extension> getModifierExtension() {
        if (modifierExtension == null) {
            modifierExtension = new ArrayList<Extension>();
        }
        return this.modifierExtension;
    }

    /**
     * 
     * 
     */
    public void setModifierExtension(List<Extension> modifierExtension) {
        this.modifierExtension = modifierExtension;
    }

    public BackboneElement withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    public BackboneElement withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    public BackboneElement withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public BackboneElement withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public BackboneElement withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public BackboneElement withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public BackboneElement withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof BackboneElement)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final BackboneElement that = ((BackboneElement) object);
        {
            List<Extension> lhsModifierExtension;
            lhsModifierExtension = (((this.modifierExtension!= null)&&(!this.modifierExtension.isEmpty()))?this.getModifierExtension():null);
            List<Extension> rhsModifierExtension;
            rhsModifierExtension = (((that.modifierExtension!= null)&&(!that.modifierExtension.isEmpty()))?that.getModifierExtension():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modifierExtension", lhsModifierExtension), LocatorUtils.property(thatLocator, "modifierExtension", rhsModifierExtension), lhsModifierExtension, rhsModifierExtension)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<Extension> theModifierExtension;
            theModifierExtension = (((this.modifierExtension!= null)&&(!this.modifierExtension.isEmpty()))?this.getModifierExtension():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modifierExtension", theModifierExtension), currentHashCode, theModifierExtension);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
