//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.19 at 02:48:31 AM MST 
//


package org.hl7.fhir;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A structured set of questions and their answers. The Questionnaire may contain questions, answers or both. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the underlying questions.
 * 
 * <p>Java class for Questionnaire.Group complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Questionnaire.Group">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="header" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="text" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="subject" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="group" type="{http://hl7.org/fhir}Questionnaire.Group" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="question" type="{http://hl7.org/fhir}Questionnaire.Question" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Questionnaire.Group", propOrder = {
    "name",
    "header",
    "text",
    "subject",
    "group",
    "question"
})
@Entity(name = "QuestionnaireGroup")
@Table(name = "QUESTIONNAIREGROUP")
public class QuestionnaireGroup
    extends BackboneElement
    implements Equals, HashCode
{

    protected CodeableConcept name;
    protected org.hl7.fhir.String header;
    protected org.hl7.fhir.String text;
    protected ResourceReference subject;
    protected List<QuestionnaireGroup> group;
    protected List<QuestionnaireQuestion> question;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__QUESTIONNAIREGROUP_HJID")
    public CodeableConcept getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setName(CodeableConcept value) {
        this.name = value;
    }

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HEADER_QUESTIONNAIREGROUP_HJ_0")
    public org.hl7.fhir.String getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setHeader(org.hl7.fhir.String value) {
        this.header = value;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEXT_QUESTIONNAIREGROUP_HJID")
    public org.hl7.fhir.String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.String }
     *     
     */
    public void setText(org.hl7.fhir.String value) {
        this.text = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUBJECT_QUESTIONNAIREGROUP_H_0")
    public ResourceReference getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setSubject(ResourceReference value) {
        this.subject = value;
    }

    /**
     * Gets the value of the group property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the group property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionnaireGroup }
     * 
     * 
     */
    @OneToMany(targetEntity = QuestionnaireGroup.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GROUP__QUESTIONNAIREGROUP_HJ_0")
    public List<QuestionnaireGroup> getGroup() {
        if (group == null) {
            group = new ArrayList<QuestionnaireGroup>();
        }
        return this.group;
    }

    /**
     * 
     * 
     */
    public void setGroup(List<QuestionnaireGroup> group) {
        this.group = group;
    }

    /**
     * Gets the value of the question property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the question property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestion().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionnaireQuestion }
     * 
     * 
     */
    @OneToMany(targetEntity = QuestionnaireQuestion.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "QUESTION_QUESTIONNAIREGROUP__0")
    public List<QuestionnaireQuestion> getQuestion() {
        if (question == null) {
            question = new ArrayList<QuestionnaireQuestion>();
        }
        return this.question;
    }

    /**
     * 
     * 
     */
    public void setQuestion(List<QuestionnaireQuestion> question) {
        this.question = question;
    }

    public QuestionnaireGroup withName(CodeableConcept value) {
        setName(value);
        return this;
    }

    public QuestionnaireGroup withHeader(org.hl7.fhir.String value) {
        setHeader(value);
        return this;
    }

    public QuestionnaireGroup withText(org.hl7.fhir.String value) {
        setText(value);
        return this;
    }

    public QuestionnaireGroup withSubject(ResourceReference value) {
        setSubject(value);
        return this;
    }

    public QuestionnaireGroup withGroup(QuestionnaireGroup... values) {
        if (values!= null) {
            for (QuestionnaireGroup value: values) {
                getGroup().add(value);
            }
        }
        return this;
    }

    public QuestionnaireGroup withGroup(Collection<QuestionnaireGroup> values) {
        if (values!= null) {
            getGroup().addAll(values);
        }
        return this;
    }

    public QuestionnaireGroup withGroup(List<QuestionnaireGroup> group) {
        setGroup(group);
        return this;
    }

    public QuestionnaireGroup withQuestion(QuestionnaireQuestion... values) {
        if (values!= null) {
            for (QuestionnaireQuestion value: values) {
                getQuestion().add(value);
            }
        }
        return this;
    }

    public QuestionnaireGroup withQuestion(Collection<QuestionnaireQuestion> values) {
        if (values!= null) {
            getQuestion().addAll(values);
        }
        return this;
    }

    public QuestionnaireGroup withQuestion(List<QuestionnaireQuestion> question) {
        setQuestion(question);
        return this;
    }

    @Override
    public QuestionnaireGroup withModifierExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withModifierExtension(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtension().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withModifierExtension(List<Extension> modifierExtension) {
        setModifierExtension(modifierExtension);
        return this;
    }

    @Override
    public QuestionnaireGroup withExtension(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtension().add(value);
            }
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withExtension(Collection<Extension> values) {
        if (values!= null) {
            getExtension().addAll(values);
        }
        return this;
    }

    @Override
    public QuestionnaireGroup withExtension(List<Extension> extension) {
        setExtension(extension);
        return this;
    }

    @Override
    public QuestionnaireGroup withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof QuestionnaireGroup)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final QuestionnaireGroup that = ((QuestionnaireGroup) object);
        {
            CodeableConcept lhsName;
            lhsName = this.getName();
            CodeableConcept rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsHeader;
            lhsHeader = this.getHeader();
            org.hl7.fhir.String rhsHeader;
            rhsHeader = that.getHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "header", lhsHeader), LocatorUtils.property(thatLocator, "header", rhsHeader), lhsHeader, rhsHeader)) {
                return false;
            }
        }
        {
            org.hl7.fhir.String lhsText;
            lhsText = this.getText();
            org.hl7.fhir.String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        {
            ResourceReference lhsSubject;
            lhsSubject = this.getSubject();
            ResourceReference rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            List<QuestionnaireGroup> lhsGroup;
            lhsGroup = (((this.group!= null)&&(!this.group.isEmpty()))?this.getGroup():null);
            List<QuestionnaireGroup> rhsGroup;
            rhsGroup = (((that.group!= null)&&(!that.group.isEmpty()))?that.getGroup():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "group", lhsGroup), LocatorUtils.property(thatLocator, "group", rhsGroup), lhsGroup, rhsGroup)) {
                return false;
            }
        }
        {
            List<QuestionnaireQuestion> lhsQuestion;
            lhsQuestion = (((this.question!= null)&&(!this.question.isEmpty()))?this.getQuestion():null);
            List<QuestionnaireQuestion> rhsQuestion;
            rhsQuestion = (((that.question!= null)&&(!that.question.isEmpty()))?that.getQuestion():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "question", lhsQuestion), LocatorUtils.property(thatLocator, "question", rhsQuestion), lhsQuestion, rhsQuestion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CodeableConcept theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            org.hl7.fhir.String theHeader;
            theHeader = this.getHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "header", theHeader), currentHashCode, theHeader);
        }
        {
            org.hl7.fhir.String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            List<QuestionnaireGroup> theGroup;
            theGroup = (((this.group!= null)&&(!this.group.isEmpty()))?this.getGroup():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "group", theGroup), currentHashCode, theGroup);
        }
        {
            List<QuestionnaireQuestion> theQuestion;
            theQuestion = (((this.question!= null)&&(!this.question.isEmpty()))?this.getQuestion():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "question", theQuestion), currentHashCode, theQuestion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
