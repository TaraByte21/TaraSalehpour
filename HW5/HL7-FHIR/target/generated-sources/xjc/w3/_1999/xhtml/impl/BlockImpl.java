//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.05 at 10:59:53 PM MST 
//


package w3._1999.xhtml.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import w3._1999.xhtml.Block;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Block", propOrder = {
    "psAndH1SAndH2S"
})
@XmlSeeAlso({
    BlockquoteImpl.class
})
public class BlockImpl implements Serializable, ToString, Block
{

    @XmlElements({
        @XmlElement(name = "p", type = PImpl.class),
        @XmlElement(name = "h1", type = H1Impl.class),
        @XmlElement(name = "h2", type = H2Impl.class),
        @XmlElement(name = "h3", type = H3Impl.class),
        @XmlElement(name = "h4", type = H4Impl.class),
        @XmlElement(name = "h5", type = H5Impl.class),
        @XmlElement(name = "h6", type = H6Impl.class),
        @XmlElement(name = "div", type = DivImpl.class),
        @XmlElement(name = "ul", type = UlImpl.class),
        @XmlElement(name = "ol", type = OlImpl.class),
        @XmlElement(name = "dl", type = DlImpl.class),
        @XmlElement(name = "pre", type = PreImpl.class),
        @XmlElement(name = "hr", type = HrImpl.class),
        @XmlElement(name = "blockquote", type = BlockquoteImpl.class),
        @XmlElement(name = "table", type = TableImpl.class)
    })
    protected List<Object> psAndH1SAndH2S;

    public List<Object> getPSAndH1SAndH2S() {
        if (psAndH1SAndH2S == null) {
            psAndH1SAndH2S = new ArrayList<Object>();
        }
        return this.psAndH1SAndH2S;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<Object> thePSAndH1SAndH2S;
            thePSAndH1SAndH2S = (((this.psAndH1SAndH2S!= null)&&(!this.psAndH1SAndH2S.isEmpty()))?this.getPSAndH1SAndH2S():null);
            strategy.appendField(locator, this, "psAndH1SAndH2S", buffer, thePSAndH1SAndH2S);
        }
        return buffer;
    }

    public BlockImpl withPSAndH1SAndH2S(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getPSAndH1SAndH2S().add(value);
            }
        }
        return this;
    }

    public BlockImpl withPSAndH1SAndH2S(Collection<Object> values) {
        if (values!= null) {
            getPSAndH1SAndH2S().addAll(values);
        }
        return this;
    }

}
